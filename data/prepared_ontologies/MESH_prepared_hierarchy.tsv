"term_id"	"parent_id"
"C000591739"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C000596385"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C000598645"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C000600608"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C531633"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C531647"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C531664"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C531673"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C531684"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C531698"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C531735"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C531777"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C531816"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C531833"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C531849"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C531854"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535274"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535276"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535281"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535285"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535286"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535288"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535289"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535292"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535296"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535297"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535300"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535301"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535302"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535303"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535306"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535308"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535310"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535311"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535312"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535313"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535314"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535317"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535319"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535322"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535325"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535326"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535327"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535328"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535330"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535331"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535332"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535336"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535342"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535347"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535349"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535350"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535351"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535353"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535356"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535358"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535361"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535362"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535367"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535369"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535370"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535371"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535373"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535374"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535375"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535376"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535377"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535380"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535382"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535386"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535387"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535388"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535391"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535393"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535395"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535396"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535397"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535402"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535406"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535407"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535408"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535413"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535415"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535417"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535419"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535420"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535421"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535423"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535424"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535428"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535434"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535435"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535436"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535440"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535442"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535443"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535444"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535448"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535449"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535454"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535458"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535460"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535463"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535465"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535466"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535468"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535472"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535473"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535474"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535475"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535476"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535477"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535480"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535483"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535484"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535487"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535489"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535492"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535493"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535494"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535499"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535500"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535501"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535504"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535505"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535506"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535508"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535512"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535513"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535516"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535520"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535522"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535523"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535528"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535530"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535539"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535540"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535541"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535547"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535548"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535549"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535550"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535554"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535557"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535558"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535559"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535563"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535564"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535566"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535568"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535572"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535578"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535579"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535581"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535584"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535586"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535588"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535589"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535591"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535597"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535598"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535600"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535607"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535612"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535615"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535618"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535623"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535624"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535626"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535634"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535635"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535639"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535650"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535651"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535653"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535655"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535657"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535658"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535661"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535662"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535663"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535664"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535665"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535668"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535674"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535675"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535677"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535679"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535683"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535687"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535688"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535689"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535690"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535693"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535694"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535702"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535705"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535706"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535708"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535716"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535717"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535718"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535720"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535726"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535727"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535729"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535731"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535733"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535735"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535736"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535737"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535738"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535739"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535741"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535742"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535743"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535744"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535745"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535747"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535748"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535749"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535750"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535751"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535752"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535753"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535755"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535756"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535757"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535758"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535761"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535763"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535765"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535766"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535767"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535769"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535770"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535771"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535779"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535780"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535781"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535782"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535783"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535784"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535785"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535786"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535787"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535788"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535793"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535794"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535795"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535797"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535798"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535799"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535803"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535808"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535811"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535812"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535813"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535819"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535823"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535826"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535827"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535829"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535832"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535833"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535837"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535844"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535845"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535849"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535852"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535853"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535857"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535858"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535861"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535863"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535865"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535866"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535870"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535880"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535881"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535882"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535883"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535884"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535887"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535889"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535894"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535895"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535896"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535898"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535899"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535900"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535903"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535906"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535908"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535909"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535910"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535911"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535912"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535914"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535916"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535918"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535919"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535924"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535928"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535933"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535934"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535935"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535941"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535942"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535943"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535950"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535955"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535959"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535962"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535963"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535964"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535967"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535969"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535970"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535971"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535978"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535982"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535984"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535985"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535986"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535990"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535993"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C535994"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536000"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536004"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536008"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536010"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536014"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536015"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536016"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536017"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536020"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536022"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536025"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536026"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536028"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536029"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536033"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536035"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536036"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536038"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536042"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536044"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536050"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536051"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536052"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536053"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536056"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536058"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536061"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536062"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536063"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536064"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536068"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536071"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536072"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536075"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536079"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536081"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536085"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536087"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536088"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536096"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536101"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536106"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536107"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536108"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536109"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536110"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536116"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536120"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536122"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536123"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536126"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536132"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536133"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536135"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536137"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536138"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536141"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536142"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536143"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536148"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536150"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536152"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536153"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536155"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536157"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536158"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536159"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536164"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536167"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536169"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536170"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536171"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536176"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536183"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536184"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536193"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536194"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536195"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536196"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536197"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536198"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536201"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536203"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536209"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536210"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536211"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536213"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536214"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536221"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536223"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536227"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536231"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536236"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536237"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536238"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536239"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536240"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536242"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536246"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536251"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536252"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536253"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536254"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536258"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536259"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536260"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536262"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536267"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536271"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536272"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536274"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536275"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536285"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536294"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536296"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536297"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536303"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536309"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536310"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536312"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536316"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536317"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536319"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536321"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536328"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536329"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536330"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536332"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536335"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536343"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536344"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536350"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536352"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536356"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536357"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536358"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536361"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536362"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536364"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536370"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536373"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536376"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536377"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536378"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536382"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536385"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536388"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536390"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536394"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536397"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536398"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536399"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536401"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536402"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536405"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536408"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536411"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536414"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536415"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536416"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536420"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536422"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536423"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536426"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536428"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536430"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536432"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536434"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536436"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536438"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536439"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536440"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536444"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536446"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536447"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536453"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536455"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536456"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536457"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536458"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536461"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536463"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536471"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536472"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536476"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536477"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536479"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536480"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536482"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536494"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536495"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536498"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536500"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536508"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536510"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536512"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536517"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536528"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536531"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536534"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536536"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536540"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536541"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536549"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536551"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536554"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536560"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536561"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536564"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536567"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536573"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536575"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536580"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536582"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536586"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536587"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536589"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536604"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536605"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536606"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536607"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536608"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536611"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536612"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536614"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536618"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536619"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536620"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536621"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536622"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536623"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536625"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536629"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536630"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536632"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536637"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536641"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536642"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536643"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536644"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536647"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536648"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536652"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536653"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536654"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536657"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536662"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536664"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536665"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536671"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536677"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536678"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536680"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536687"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536690"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536692"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536695"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536697"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536700"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536703"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536704"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536708"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536710"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536711"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536716"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536717"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536718"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536719"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536722"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536725"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536726"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536729"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536732"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536735"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536736"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536739"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536742"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536743"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536745"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536746"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536750"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536751"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536759"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536761"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536766"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536771"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536774"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536778"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536781"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536787"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536788"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536789"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536795"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536801"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536804"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536808"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536811"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536813"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536816"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536821"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536826"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536827"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536830"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536831"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536832"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536833"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536835"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536836"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536840"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536841"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536851"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536852"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536856"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536857"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536858"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536859"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536861"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536862"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536864"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536865"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536866"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536869"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536870"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536871"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536874"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536883"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536884"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536885"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536892"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536904"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536905"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536907"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536911"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536918"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536919"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536920"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536923"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536924"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536928"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536934"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536935"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536936"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536937"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536939"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536942"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536943"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536945"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536946"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536950"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536952"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536953"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536958"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536959"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536962"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536965"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536970"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536973"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536974"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536975"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536978"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536979"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536984"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536987"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536989"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536990"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C536991"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537004"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537008"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537013"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537015"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537018"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537020"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537021"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537022"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537027"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537030"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537032"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537036"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537037"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537038"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537039"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537042"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537043"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537047"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537051"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537052"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537055"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537057"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537058"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537060"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537062"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537066"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537067"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537068"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537070"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537079"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537081"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537082"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537087"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537088"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537089"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537092"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537093"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537094"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537095"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537097"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537098"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537099"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537102"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537109"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537111"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537113"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537115"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537118"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537119"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537121"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537122"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537125"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537128"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537133"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537135"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537136"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537138"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537143"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537144"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537145"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537146"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537147"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537149"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537152"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537153"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537154"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537156"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537157"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537160"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537162"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537168"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537172"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537174"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537177"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537179"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537180"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537181"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537185"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537187"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537189"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537194"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537195"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537196"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537197"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537198"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537199"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537200"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537201"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537202"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537203"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537204"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537205"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537206"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537207"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537208"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537209"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537210"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537213"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537217"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537218"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537226"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537236"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537240"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537241"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537243"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537247"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537248"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537249"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537257"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537258"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537262"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537264"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537267"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537270"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537274"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537279"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537283"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537285"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537287"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537288"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537291"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537293"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537296"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537300"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537301"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537302"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537303"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537304"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537307"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537309"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537310"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537312"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537313"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537315"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537316"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537318"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537319"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537321"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537322"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537323"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537325"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537326"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537327"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537328"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537329"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537332"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537333"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537338"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537340"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537343"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537344"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537345"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537346"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537348"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537349"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537350"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537351"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537352"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537353"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537356"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537359"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537360"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537361"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537362"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537364"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537369"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537371"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537373"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537377"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537388"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537393"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537394"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537395"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537396"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537403"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537404"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537409"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537411"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537412"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537415"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537417"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537418"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537419"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537421"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537423"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537425"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537427"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537429"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537430"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537436"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537437"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537440"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537445"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537446"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537450"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537451"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537456"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537457"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537459"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537463"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537465"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537476"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537480"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537482"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537483"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537484"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537485"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537486"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537487"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537488"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537492"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537493"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537494"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537495"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537496"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537497"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537498"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537502"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537503"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537505"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537511"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537512"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537516"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537521"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537525"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537526"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537527"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537533"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537548"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537550"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537552"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537558"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537559"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537560"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537563"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537564"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537565"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537571"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537575"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537580"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537583"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537592"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537596"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537602"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537607"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537608"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537611"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537612"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537617"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537620"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537621"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537622"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537625"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537627"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537628"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537632"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537633"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537636"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537643"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537650"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537651"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537652"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537658"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537659"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537662"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537663"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537668"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537676"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537680"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537682"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537683"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537686"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537688"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537689"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537690"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537696"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537698"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537699"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537700"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537701"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537704"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537705"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537706"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537709"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537710"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537711"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537714"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537723"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537724"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537727"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537729"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537730"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537731"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537732"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537736"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537741"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537742"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537743"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537745"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537747"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537748"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537749"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537750"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537754"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537756"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537757"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537761"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537763"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537767"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537768"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537769"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537770"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537777"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537778"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537785"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537786"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537788"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537792"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537793"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537799"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537805"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537807"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537811"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537813"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537821"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537824"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537828"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537830"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537831"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537833"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537835"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537839"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537846"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537848"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537849"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537858"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537860"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537862"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537863"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537871"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537872"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537874"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537878"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537880"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537881"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537884"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537889"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537894"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537901"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537902"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537904"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537907"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537908"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537909"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537912"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537914"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537916"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537917"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537918"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537919"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537930"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537931"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537932"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537933"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537934"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537937"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537940"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537941"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537943"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537944"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537948"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537953"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537955"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537959"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537963"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537966"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537970"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537971"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537975"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537984"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537985"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537986"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537989"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537990"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537991"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537993"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537994"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537995"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537997"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537998"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C537999"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538003"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538006"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538007"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538012"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538013"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538019"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538022"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538024"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538025"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538027"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538035"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538037"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538038"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538040"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538041"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538046"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538049"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538051"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538052"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538056"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538063"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538064"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538065"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538068"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538069"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538070"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538078"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538087"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538088"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538089"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538091"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538095"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538104"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538105"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538106"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538116"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538119"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538128"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538132"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538133"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538134"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538135"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538137"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538139"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538141"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538142"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538144"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538150"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538152"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538153"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538154"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538155"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538157"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538158"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538159"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538165"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538167"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538170"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538173"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538179"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538182"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538183"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538184"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538185"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538186"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538187"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538189"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538191"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538193"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538209"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538212"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538213"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538215"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538217"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538225"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538228"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538229"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538230"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538234"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538235"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538241"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538245"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538246"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538247"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538249"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538253"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538254"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538256"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538258"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538259"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538260"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538262"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538265"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538268"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538270"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538273"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538275"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538276"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538278"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538280"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538282"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538283"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538287"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538290"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538293"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538295"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538302"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538303"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538304"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538306"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538307"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538308"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538309"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538315"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538317"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538318"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538319"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538320"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538322"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538324"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538331"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538332"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538333"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538334"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538335"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538336"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538338"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538342"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538343"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538344"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538346"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538353"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538356"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538361"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538364"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538374"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538375"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538376"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538377"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538380"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538382"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538385"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538388"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538389"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538396"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538397"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538401"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538402"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538421"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538457"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538482"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538494"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538523"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538582"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538585"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538602"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538604"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538614"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538640"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C538669"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C545036"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C548016"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C548032"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C548069"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C548070"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C548072"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C548074"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C548075"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C548076"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C548077"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C548080"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C557674"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C557815"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C557817"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C557818"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C557819"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C557820"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C557821"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C557826"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562379"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562385"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562405"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562408"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562417"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562440"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562441"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562448"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562464"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562465"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562485"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562524"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562538"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562548"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562551"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562562"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562565"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562583"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562584"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562587"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562594"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562600"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562602"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562603"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562618"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562625"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562627"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562628"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562632"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562642"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562643"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562657"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562664"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562683"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562684"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562687"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562688"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562701"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562704"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562710"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562716"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562718"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562732"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562733"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562735"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562742"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562772"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562776"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562790"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562791"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562793"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562799"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562801"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562803"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562812"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562818"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562829"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562831"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562839"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562840"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562841"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562864"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562873"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562875"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562880"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562889"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562897"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562900"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562903"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562924"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562925"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562938"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562940"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562941"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562951"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562958"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562961"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562973"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562974"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562993"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562995"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C562999"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563008"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563009"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563010"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563023"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563028"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563043"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563047"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563050"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563065"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563067"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563085"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563095"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563110"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563111"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563120"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563124"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563127"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563129"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563134"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563136"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563156"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563159"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563160"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563177"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563192"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563207"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563209"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563210"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563215"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563233"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563236"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563238"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563239"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563242"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563248"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563256"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563258"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563262"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563290"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563291"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563311"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563315"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563316"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563324"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563331"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563333"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563341"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563347"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563363"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563370"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563375"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563380"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563383"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563401"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563408"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563423"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563426"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563461"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563462"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563463"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563466"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563472"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563475"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563490"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563491"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563501"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563509"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563546"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563549"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563560"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563575"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563592"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563612"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563636"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563637"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563639"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563641"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563646"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563654"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563663"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563665"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563666"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563677"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563678"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563698"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563702"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563719"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563721"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563730"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563732"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563735"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563736"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563739"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563740"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563753"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563757"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563774"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563775"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563780"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563781"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563785"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563786"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563789"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563794"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563797"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563798"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563803"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563807"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563824"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563835"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563840"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563854"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563855"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563856"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563867"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563869"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563876"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563898"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563905"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563914"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563918"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563924"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563935"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563936"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563963"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563973"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563977"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563980"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563989"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563990"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C563994"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564010"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564011"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564013"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564014"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564017"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564026"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564038"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564048"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564050"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564092"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564099"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564100"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564101"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564105"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564112"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564115"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564131"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564154"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564161"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564166"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564168"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564185"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564214"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564221"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564232"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564242"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564243"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564244"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564252"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564254"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564256"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564257"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564269"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564271"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564275"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564277"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564278"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564283"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564288"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564305"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564306"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564315"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564333"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564334"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564336"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564342"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564352"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564365"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564367"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564368"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564369"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564375"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564377"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564392"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564403"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564406"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564407"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564425"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564457"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564472"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564474"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564484"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564485"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564490"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564494"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564495"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564505"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564506"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564508"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564509"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564510"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564516"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564519"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564520"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564538"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564539"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564551"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564560"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564563"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564567"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564570"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564589"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564593"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564609"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564616"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564621"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564626"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564640"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564648"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564650"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564652"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564660"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564664"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564676"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564685"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564694"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564696"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564698"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564700"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564702"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564708"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564710"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564715"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564741"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564743"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564747"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564759"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564760"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564766"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564769"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564770"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564773"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564788"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564794"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564796"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564799"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564808"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564809"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564815"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564835"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564839"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564841"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564844"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564849"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564856"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564858"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564859"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564866"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564868"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564869"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564874"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564875"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564878"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564880"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564905"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564908"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564915"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564931"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564934"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564935"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564948"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564968"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564969"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C564972"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565010"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565016"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565020"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565021"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565027"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565029"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565034"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565039"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565046"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565061"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565062"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565068"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565076"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565080"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565089"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565094"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565095"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565103"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565114"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565118"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565123"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565128"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565129"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565134"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565148"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565155"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565178"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565193"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565195"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565210"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565217"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565220"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565232"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565255"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565264"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565275"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565278"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565284"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565304"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565309"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565311"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565312"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565313"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565337"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565342"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565349"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565359"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565360"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565373"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565374"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565375"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565384"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565386"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565393"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565396"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565398"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565404"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565409"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565410"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565411"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565437"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565439"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565440"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565442"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565448"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565449"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565454"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565460"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565469"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565485"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565492"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565502"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565510"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565524"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565529"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565551"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565557"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565564"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565578"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565593"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565594"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565600"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565601"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565604"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565605"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565606"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565607"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565618"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565619"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565631"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565642"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565647"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565662"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565674"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565679"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565686"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565690"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565696"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565705"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565706"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565723"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565726"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565734"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565735"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565737"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565740"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565748"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565768"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565779"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565780"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565782"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565790"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565797"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565803"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565805"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565808"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565822"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565826"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565831"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565834"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565865"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565867"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565870"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565891"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565896"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565902"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565918"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565919"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565921"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565923"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565924"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565928"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565942"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565951"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565968"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565974"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C565976"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566007"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566029"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566032"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566046"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566066"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566068"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566069"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566090"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566092"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566098"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566099"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566108"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566111"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566112"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566130"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566146"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566192"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566196"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566226"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566228"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566236"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566247"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566281"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566293"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566300"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566310"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566319"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566323"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566340"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566358"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566370"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566373"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566384"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566402"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566435"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566440"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566441"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566449"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566452"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566454"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566467"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566468"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566473"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566487"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566492"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566494"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566511"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566520"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566523"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566526"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566527"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566529"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566544"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566550"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566555"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566575"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566582"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566593"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566599"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566600"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566601"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566618"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566623"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566627"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566644"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566655"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566659"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566662"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566675"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566695"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566729"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566736"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566737"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566739"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566740"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566767"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566773"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566784"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566795"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566813"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566815"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566822"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566825"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566826"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566874"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566878"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566882"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566885"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566906"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566908"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566931"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566956"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566961"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566968"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566969"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566970"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566983"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566984"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566987"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566988"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C566993"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567006"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567009"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567010"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567015"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567023"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567024"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567032"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567034"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567038"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567040"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567053"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567059"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567065"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567067"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567068"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567070"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567088"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567090"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567095"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567109"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567115"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567125"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567126"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567128"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567129"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567132"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567166"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567171"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567182"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567186"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567192"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567195"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567201"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567203"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567207"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567210"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567224"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567228"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567239"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567261"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567262"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567289"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567298"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567311"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567314"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567320"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567349"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567350"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567354"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567355"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567357"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567359"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567362"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567379"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567382"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567390"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567398"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567401"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567408"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567416"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567425"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567430"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567433"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567434"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567436"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567437"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567439"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567453"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567459"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567464"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567465"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567466"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567471"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567475"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567476"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567478"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567492"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567502"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567511"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567512"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567516"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567517"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567518"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567527"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567528"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567555"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567558"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567564"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567585"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567587"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567588"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567595"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567624"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567626"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567628"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567639"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567640"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567641"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567642"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567644"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567645"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567653"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567664"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567687"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567691"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567703"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567705"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567707"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567708"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567709"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567710"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567715"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567716"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567717"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567718"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567730"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567751"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567760"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567763"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567767"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567769"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567770"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567773"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567780"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567791"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567810"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567833"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567843"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567844"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567845"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567850"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567851"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567855"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567856"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567857"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567859"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567861"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567863"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567865"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567930"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C567931"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C570377"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C572568"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C573023"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C573722"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C575534"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C579395"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C579849"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C579867"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C579928"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C579935"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C579969"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C580002"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C580017"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C580039"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C580047"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C580055"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C580062"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C580087"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C580130"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C580174"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C580192"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C580205"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C580241"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C580280"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C580316"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C580334"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C580383"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C580439"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"C580458"	"function (description, open = \"\", blocking = TRUE, encoding = getOption(\"encoding\"), method = getOption(\"url.method\", \"default\"), headers = NULL) 
{
    method <- match.arg(method, c(\"default\", \"internal\", \"libcurl\", \"wininet\"))
    if (!is.null(headers)) {
        nh <- names(headers)
        if (length(nh) != length(headers) || any(nh == \"\") || anyNA(headers) || anyNA(nh)) 
            stop(\"'headers' must have names and must not be NA\")
        headers <- paste0(nh, \": \", headers)
        headers <- list(headers, paste0(headers, \"\r\n\", collapse = \"\"))
    }
    .Internal(url(description, open, blocking, encoding, method, headers))
}"
"D000012"	"D006995"
"D000013"	"D009358"
"D000016"	"D000013|D011832"
"D000026"	"D000022"
"D000037"	"D010922|D007744"
"D000038"	"D013492"
"D000039"	"D000038|D014069"
"D000052"	"D008548"
"D000066553"	"D002652|D001526"
"D000067404"	"D003147"
"D000067559"	"D007859"
"D000067877"	"D002659"
"D000068099"	"D001523"
"D000069290"	"D006547|D011183"
"D000069544"	"D002494|D004660"
"D000070558"	"D005532|D005531"
"D000071074"	"D018805|D007232"
"D000071243"	"D001102|D018177"
"D000071378"	"D005531"
"D000072281"	"D008206"
"D000075224"	"D006331"
"D000075322"	"D011041"
"D000075363"	"D000686|D010265|D054219|D008232"
"D000077192"	"D008175|D000230"
"D000077195"	"D006258|D002294"
"D000077216"	"D010051|D002277"
"D000077277"	"D004938|D002294"
"D000081029"	"D006976"
"D000130"	"D010009|D004392"
"D000137"	"D008659"
"D000140"	"D000138"
"D000141"	"D015499|D000138"
"D000151"	"D045828"
"D000153"	"D017486|D007627|D005499"
"D000160"	"D003389|D012181"
"D000163"	"D012897|D015658"
"D000168"	"D003398|D013576"
"D000169"	"D012868|D003872"
"D000170"	"D020262|D010523"
"D000172"	"D006964|D001849"
"D000187"	"D000820|D000189"
"D000189"	"D016871"
"D000193"	"D016908"
"D000196"	"D000193"
"D000208"	"D020969"
"D000230"	"D002277"
"D000231"	"D000230"
"D000232"	"D018225"
"D000235"	"D018193"
"D000236"	"D009375"
"D000238"	"D000236|D018358"
"D000239"	"D000236|D018358"
"D000257"	"D004266"
"D000258"	"D000257"
"D000270"	"D015845|D015840|D001342"
"D000274"	"D008068"
"D000292"	"D000291|D034161"
"D000303"	"D000307"
"D000307"	"D004700"
"D000308"	"D000307"
"D000309"	"D000307"
"D000310"	"D004701|D000307"
"D000312"	"D000307|D030342|D043202|D047808"
"D000326"	"D020279|D038901|D000309|D020739|D018901"
"D000347"	"D006474|D025861|D020147"
"D000361"	"D007153|D001796|D008232"
"D000377"	"D010468"
"D000379"	"D001008"
"D000380"	"D007970"
"D000386"	"D012897|D015658"
"D000405"	"D001927"
"D000417"	"D015785|D017496|D000592|D012873"
"D000419"	"D011507"
"D000430"	"D020268|D013375|D019973"
"D000453"	"D000820|D012897|D010322|D002609"
"D000474"	"D000592"
"D000505"	"D007039|D020763"
"D000506"	"D000505"
"D000507"	"D017520|D012625|D000505"
"D000532"	"D012120"
"D000542"	"D012130|D017563"
"D000544"	"D024801|D003704"
"D000562"	"D011528"
"D000564"	"D009808"
"D000567"	"D003744"
"D000568"	"D008599"
"D000592"	"D008661"
"D000608"	"D015499"
"D000652"	"D007232"
"D000686"	"D057165"
"D000690"	"D013118|D016472|D057177"
"D000699"	"D030342|D010523"
"D000707"	"D006969"
"D000711"	"D016905"
"D000724"	"D006725"
"D000740"	"D006402"
"D000741"	"D000080983|D000740"
"D000742"	"D000745"
"D000743"	"D000740"
"D000744"	"D001327|D000743"
"D000745"	"D030342|D000743"
"D000746"	"D000745"
"D000747"	"D000740"
"D000748"	"D000740"
"D000750"	"D000740|D009196"
"D000751"	"D000740|D007232"
"D000752"	"D000749|D014806"
"D000753"	"D009190|D000740"
"D000754"	"D000753"
"D000755"	"D000745|D006453"
"D000756"	"D009190|D000740"
"D000788"	"D000789"
"D000789"	"D000787"
"D000793"	"D012164"
"D000795"	"D059345|D040181|D013106"
"D000796"	"D012871|D006099|D004802"
"D000799"	"D014652|D014581"
"D000848"	"D014071"
"D000856"	"D001068"
"D000857"	"D012678"
"D000868"	"D003161"
"D000874"	"D012829|D055008"
"D000881"	"D016863"
"D000886"	"D010808|D001699|D008919"
"D001002"	"D007674|D014555"
"D001004"	"D012002"
"D001005"	"D001004|D012004"
"D001007"	"D004644"
"D001008"	"D001523"
"D001010"	"D065886|D001008"
"D001017"	"D006330"
"D001018"	"D014652"
"D001020"	"D001024"
"D001022"	"D006349"
"D001023"	"D016127"
"D001025"	"D014657|D001018"
"D001049"	"D012818|D012120"
"D001063"	"D002430"
"D001064"	"D059413|D002429|D005759"
"D001072"	"D011596"
"D001102"	"D014777|D000079426"
"D001112"	"D003318"
"D001117"	"D012327"
"D001139"	"D009436"
"D001145"	"D006331|D010335"
"D001161"	"D001157"
"D001162"	"D001161"
"D001165"	"D054079|D014652"
"D001167"	"D014657"
"D001168"	"D007592"
"D001169"	"D004195|D001168"
"D001170"	"D007239|D001168"
"D001171"	"D001327|D001168|D012216"
"D001172"	"D001327|D001168|D012216"
"D001176"	"D009139|D009135|D007592"
"D001177"	"D007592"
"D001183"	"D007105"
"D001195"	"D011009"
"D001196"	"D017191"
"D001201"	"D010335"
"D001206"	"D001361"
"D001228"	"D009181"
"D001229"	"D008172|D055732|D012130"
"D001238"	"D007232"
"D001249"	"D008173|D012130|D001982"
"D001251"	"D012030"
"D001254"	"D005910"
"D001260"	"D049914|D013684|D030342|D020754|D020752|D000081207"
"D001282"	"D001145"
"D001289"	"D019958"
"D001321"	"D000067877"
"D001327"	"D007154"
"D001342"	"D009422"
"D001361"	"D003677"
"D001404"	"D017282|D011529|D011528"
"D001416"	"D010146"
"D001424"	"D001423"
"D001446"	"D010409"
"D001449"	"D009395"
"D001471"	"D004935|D011230"
"D001474"	"D001476"
"D001476"	"D016905"
"D001477"	"D015499|D006929"
"D001480"	"D001927"
"D001506"	"D025063|D000015"
"D001526"	"D001519"
"D001528"	"D017445|D009059|D014606|D014657|D056660"
"D001602"	"D013832"
"D001606"	"D006474|D025861|D001791"
"D001607"	"D011009"
"D001649"	"D001660"
"D001650"	"D001661|D001649"
"D001651"	"D002779"
"D001655"	"D004383|D001660"
"D001656"	"D001649|D004065"
"D001657"	"D003137"
"D001660"	"D004066"
"D001714"	"D000068105"
"D001715"	"D000820"
"D001716"	"D000542|D009784"
"D001742"	"D016778"
"D001744"	"D001745|D014545"
"D001745"	"D014570"
"D001746"	"D014564|D001745"
"D001748"	"D001745|D014524"
"D001749"	"D001745|D014571"
"D001750"	"D001745|D009461"
"D001752"	"D002471|D015464"
"D001759"	"D008172|D003881"
"D001762"	"D005141"
"D001763"	"D005141"
"D001764"	"D005141"
"D001765"	"D008286"
"D001766"	"D014786"
"D001778"	"D006402"
"D001791"	"D006402"
"D001796"	"D006402"
"D001799"	"D006403"
"D001809"	"D018056"
"D001816"	"D049914|D000015|D000081207"
"D001832"	"D012816"
"D001837"	"D000886|D001824"
"D001847"	"D009140"
"D001851"	"D008659|D001847"
"D001855"	"D006402"
"D001859"	"D009371|D001847"
"D001862"	"D001847|D016723"
"D001882"	"D012757|D018182"
"D001883"	"D010554"
"D001885"	"D016905"
"D001890"	"D018701|D000820"
"D001899"	"D013145"
"D001906"	"D005517|D003015|D020258|D020511"
"D001913"	"D002294"
"D001915"	"D009989"
"D001919"	"D001145"
"D001927"	"D002493"
"D001929"	"D001927"
"D001930"	"D006259|D001927"
"D001932"	"D016543|D001927"
"D001941"	"D012871"
"D001943"	"D009371|D001941"
"D001948"	"D010051|D018225"
"D001982"	"D012140"
"D001984"	"D008175|D001982"
"D001987"	"D001982"
"D001988"	"D001991"
"D001991"	"D008173|D012141|D001982"
"D001996"	"D011014|D001982"
"D001997"	"D055397|D007235"
"D002006"	"D016905"
"D002032"	"D006963"
"D002037"	"D006327"
"D002044"	"D012327"
"D002051"	"D020031|D016393"
"D002054"	"D009059"
"D002056"	"D014947"
"D002062"	"D007592"
"D002095"	"D011009"
"D002100"	"D004614"
"D002105"	"D000075322"
"D002114"	"D002128"
"D002128"	"D008659"
"D002169"	"D016905"
"D002177"	"D009181"
"D002178"	"D002177|D003881"
"D002179"	"D002177|D003881"
"D002180"	"D009059|D002177"
"D002181"	"D014848|D002177"
"D002189"	"D019966"
"D002205"	"D011009|D001172"
"D002239"	"D008661"
"D002270"	"D005667"
"D002275"	"D006331|D008303"
"D002276"	"D000230|D018358"
"D002277"	"D009375"
"D002278"	"D002277"
"D002280"	"D002277|D018295"
"D002281"	"D002277|D018295"
"D002282"	"D000077192"
"D002283"	"D001984|D008175"
"D002284"	"D009374"
"D002285"	"D000071960|D000230|D018299"
"D002288"	"D000230|D018297"
"D002289"	"D002283"
"D002291"	"D018307|D002277"
"D002292"	"D000230|D007680"
"D002293"	"D000230"
"D002294"	"D018307|D002277"
"D002295"	"D002277"
"D002296"	"D018193|D012509"
"D002305"	"D006331"
"D002310"	"D009202|D020751"
"D002311"	"D009202|D006332"
"D002312"	"D009202|D001020"
"D002313"	"D009202"
"D002340"	"D002561"
"D002341"	"D002340|D002542"
"D002349"	"D020423|D012090|D009408"
"D002357"	"D009140|D003240"
"D002372"	"D001474|D008199"
"D002385"	"D009290"
"D002386"	"D007905"
"D002418"	"D000820"
"D002422"	"D020918|D009437"
"D002429"	"D007410"
"D002430"	"D002429|D007414"
"D002446"	"D008286"
"D002481"	"D012874|D013492|D003240"
"D002493"	"D009422"
"D002494"	"D007239|D002493"
"D002524"	"D001259|D002526"
"D002526"	"D001927"
"D002527"	"D013132"
"D002528"	"D015192|D002526"
"D002532"	"D020765|D000783"
"D002534"	"D001927"
"D002538"	"D020765|D002561|D020785|D001165"
"D002539"	"D020765"
"D002543"	"D020300"
"D002544"	"D020520"
"D002545"	"D002561"
"D002546"	"D002545"
"D002547"	"D001925"
"D002549"	"D020278|D001927"
"D002551"	"D001932"
"D002561"	"D014652|D001927"
"D002575"	"D002577"
"D002577"	"D014591"
"D002578"	"D002577|D011230"
"D002579"	"D002577"
"D002581"	"D002577|D000026"
"D002590"	"D006373"
"D002598"	"D009202|D014355"
"D002601"	"D013587"
"D002607"	"D015417"
"D002609"	"D000417|D000081207|D010585"
"D002613"	"D008047"
"D002636"	"D019767|D030342|D007571|D005357"
"D002637"	"D010146"
"D002644"	"D000073618"
"D002658"	"D065886"
"D002659"	"D065886"
"D002690"	"D002694|D015231"
"D002694"	"D016905"
"D002759"	"D000236"
"D002761"	"D001649"
"D002764"	"D005705"
"D002769"	"D001660"
"D002771"	"D014735"
"D002779"	"D001649"
"D002780"	"D008107|D002779"
"D002781"	"D007642"
"D002804"	"D009372"
"D002805"	"D001168|D000070657"
"D002806"	"D010009"
"D002812"	"D009372"
"D002813"	"D009372|D012509"
"D002817"	"D009373"
"D002819"	"D020820"
"D002822"	"D000230|D014328"
"D002825"	"D012173|D002833"
"D002830"	"D015862|D014604"
"D002833"	"D015862|D015866"
"D002836"	"D006474|D025861|D040181|D020147"
"D002862"	"D003881"
"D002869"	"D009154|D010335"
"D002921"	"D014945|D006097|D005355"
"D002925"	"D000072661|D010038|D012140"
"D002940"	"D010507"
"D002971"	"D009056|D008047"
"D002972"	"D009056|D007569"
"D002973"	"D019465|D010009"
"D003003"	"D014201"
"D003015"	"D016908"
"D003025"	"D000070558"
"D003027"	"D051303"
"D003047"	"D009181"
"D003048"	"D011528"
"D003057"	"D049914|D020271|D000015|D004392"
"D003074"	"D008171"
"D003092"	"D005759|D003108"
"D003093"	"D015212|D003092"
"D003103"	"D015785|D005124"
"D003108"	"D007410"
"D003109"	"D003108"
"D003110"	"D015179"
"D003111"	"D007417"
"D003112"	"D007418|D003109"
"D003121"	"D001102|D012088|D017282"
"D003123"	"D009386|D049914|D015179"
"D003128"	"D014474"
"D003137"	"D001649"
"D003138"	"D001650|D003137"
"D003139"	"D010850|D012141"
"D003141"	"D007239|D020969"
"D003147"	"D065886|D019954"
"D003161"	"D014652|D009135"
"D003218"	"D014860|D015229"
"D003231"	"D003229"
"D003232"	"D003236|D004769"
"D003234"	"D003231|D015818"
"D003235"	"D002690|D003234"
"D003236"	"D015828|D003231"
"D003240"	"D017437"
"D003248"	"D012817"
"D003286"	"D009135|D007592"
"D003294"	"D012640"
"D003316"	"D005128"
"D003317"	"D015785|D003316"
"D003320"	"D007634|D015817"
"D003323"	"D003327|D000783"
"D003324"	"D001161|D003327"
"D003327"	"D017202"
"D003328"	"D003327|D013927"
"D003329"	"D003327"
"D003371"	"D012818|D012120"
"D003384"	"D004769"
"D003389"	"D009422"
"D003390"	"D003389|D010524|D009423"
"D003394"	"D019465|D004413"
"D003397"	"D017599"
"D003398"	"D019465|D013580"
"D003409"	"D004392|D007037|D001849"
"D003410"	"D008607|D025063|D000015"
"D003414"	"D006933"
"D003440"	"D007827"
"D003444"	"D012774|D000071576"
"D003449"	"D020141|D010265"
"D003453"	"D009181"
"D003456"	"D013733|D014564"
"D003457"	"D003048|D007411|D011529"
"D003480"	"D000308"
"D003483"	"D003240|D012873"
"D003528"	"D000230"
"D003536"	"D000230|D018297"
"D003537"	"D000236|D018297"
"D003550"	"D030342|D010182|D008171|D007232"
"D003551"	"D013622"
"D003554"	"D016464"
"D003555"	"D000608"
"D003556"	"D001745"
"D003557"	"D012509"
"D003586"	"D006566"
"D003616"	"D009421|D002526|D006849"
"D003635"	"D008607|D025063|D000015"
"D003638"	"D034381"
"D003668"	"D012883"
"D003677"	"D044342"
"D003680"	"D004935|D010608"
"D003693"	"D003221|D019965"
"D003699"	"D006525|D012327"
"D003704"	"D019965|D001927"
"D003711"	"D009422"
"D003715"	"D001102|D006482|D018177"
"D003731"	"D017001"
"D003744"	"D014071"
"D003788"	"D014076"
"D003789"	"D003788"
"D003805"	"D014071"
"D003811"	"D014071"
"D003865"	"D003866"
"D003866"	"D019964"
"D003872"	"D012871"
"D003873"	"D003872|D017443"
"D003874"	"D001327|D003872|D012872"
"D003877"	"D003872|D017443"
"D003881"	"D009181|D012874"
"D003882"	"D012871|D017285|D003240"
"D003919"	"D007674|D010900"
"D003920"	"D004700|D044882"
"D003922"	"D001327|D003920"
"D003924"	"D003920"
"D003925"	"D014652|D048909"
"D003928"	"D048909|D007674"
"D003929"	"D048909|D010523"
"D003930"	"D003925|D012164"
"D003935"	"D019937"
"D003965"	"D004065"
"D003966"	"D010009|D030342"
"D003967"	"D012817"
"D003969"	"D018273|D018278"
"D004011"	"D014201"
"D004057"	"D015576|D013128"
"D004062"	"D058165"
"D004165"	"D003354"
"D004169"	"D002590"
"D004184"	"D005368|D006374"
"D004194"	"D010335"
"D004198"	"D020969|D001824"
"D004211"	"D006474|D019851|D001778"
"D004238"	"D000076385"
"D004239"	"D043963|D004238"
"D004241"	"D004240"
"D004244"	"D012678"
"D004310"	"D014188"
"D004314"	"D008607|D025063|D000015"
"D004320"	"D017205"
"D004327"	"D001519"
"D004342"	"D006967|D064420"
"D004370"	"D015785|D015835"
"D004374"	"D006330"
"D004377"	"D011178"
"D004378"	"D007410"
"D004379"	"D007414|D004378"
"D004380"	"D007415|D004378"
"D004381"	"D010437"
"D004383"	"D004378|D013272"
"D004387"	"D003286|D005350|D003240"
"D004392"	"D001848|D030342|D004700"
"D004393"	"D007018|D004392|D001849"
"D004401"	"D001184"
"D004402"	"D009477|D054969"
"D004403"	"D005759|D007410"
"D004404"	"D007411|D000562|D004403"
"D004405"	"D004403|D004756"
"D004406"	"D007153|D001796"
"D004407"	"D018237"
"D004409"	"D064420|D020820|D020258"
"D004412"	"D017699|D008599"
"D004413"	"D001848"
"D004414"	"D012735|D020018"
"D004415"	"D012817"
"D004417"	"D012818|D012120"
"D004420"	"D007744"
"D004422"	"D020821|D020271|D001480"
"D004428"	"D010039|D004427"
"D004433"	"D010146|D004427"
"D004437"	"D006330"
"D004438"	"D012877|D006470|D001778"
"D004443"	"D002590"
"D004461"	"D046110"
"D004473"	"D011711|D013290|D017192"
"D004474"	"D012757|D011213"
"D004476"	"D012868|D000015|D012873"
"D004478"	"D012876"
"D004479"	"D005124|D007906"
"D004482"	"D012376|D011213"
"D004483"	"D005141"
"D004485"	"D003872|D017443"
"D004489"	"D006333|D004487"
"D004535"	"D012868|D003095|D020141|D012873"
"D004541"	"D006330"
"D004604"	"D008209"
"D004605"	"D005368|D008209|D000079426"
"D004612"	"D000745"
"D004613"	"D004476|D010009"
"D004619"	"D004617|D011249"
"D004646"	"D010335"
"D004652"	"D010900"
"D004653"	"D013492"
"D004654"	"D016724|D014396"
"D004660"	"D001927"
"D004672"	"D004671|D018177"
"D004673"	"D020278"
"D004674"	"D004671|D018177"
"D004675"	"D004671|D017282|D018177"
"D004677"	"D006547|D009436"
"D004678"	"D001927"
"D004679"	"D002493|D002494"
"D004681"	"D020278|D020721"
"D004684"	"D020278|D004673"
"D004685"	"D004683"
"D004687"	"D010009"
"D004692"	"D001167"
"D004694"	"D006343"
"D004695"	"D009202"
"D004696"	"D006331"
"D004697"	"D004696|D053821|D001424"
"D004698"	"D013290|D004697"
"D004701"	"D004700|D009371"
"D004715"	"D005831"
"D004716"	"D014591|D000292"
"D004719"	"D009202"
"D004751"	"D005759|D007410"
"D004760"	"D005759|D007410"
"D004761"	"D003015|D004760"
"D004767"	"D000820|D003015"
"D004769"	"D010850"
"D004774"	"D005141"
"D004775"	"D014555|D001526|D019960"
"D004806"	"D005910"
"D004810"	"D018353|D002418"
"D004819"	"D014860"
"D004820"	"D012868|D012872|D012873"
"D004826"	"D059525"
"D004827"	"D001927"
"D004828"	"D004827"
"D004829"	"D004827"
"D004830"	"D004829"
"D004833"	"D004828|D000073376"
"D004839"	"D001847"
"D004842"	"D014522|D014564"
"D004844"	"D012818|D009668|D006470"
"D004859"	"D016180|D012897|D006734"
"D004886"	"D013290|D017192"
"D004889"	"D000820|D016908"
"D004892"	"D012872|D004890"
"D004893"	"D003875|D004890"
"D004899"	"D007154|D006402|D005315|D007232"
"D004909"	"D006403|D001790"
"D004915"	"D009196|D015470"
"D004916"	"D016491"
"D004919"	"D011230"
"D004927"	"D004756"
"D004932"	"D004935|D006975"
"D004935"	"D005767"
"D004940"	"D004935"
"D004941"	"D004935|D005759"
"D004942"	"D010437|D004941"
"D005058"	"D007006"
"D005067"	"D013959"
"D005076"	"D012871"
"D005077"	"D017193|D019349|D005076"
"D005080"	"D016552|D012129|D006334"
"D005120"	"D011574|D010553"
"D005124"	"D000013|D005128"
"D005126"	"D005131|D002056"
"D005127"	"D009799|D010858"
"D005134"	"D009371|D005128"
"D005141"	"D005128"
"D005142"	"D005134|D005153|D005141"
"D005148"	"D012871"
"D005153"	"D006258"
"D005155"	"D009059|D003389"
"D005158"	"D009059|D010243"
"D005166"	"D006474|D025861|D020147"
"D005168"	"D006474|D025861|D020147"
"D005171"	"D006474|D025861|D020147"
"D005173"	"D006474|D025861|D020147"
"D005175"	"D006474|D025861|D020147"
"D005177"	"D006474|D025861|D020147"
"D005184"	"D000291"
"D005198"	"D015499"
"D005199"	"D049914|D029502"
"D005208"	"D009140"
"D005211"	"D014201|D008109"
"D005221"	"D012816"
"D005234"	"D008107"
"D005235"	"D005234|D008108"
"D005242"	"D012002"
"D005258"	"D001172"
"D005265"	"D006620"
"D005271"	"D010020"
"D005317"	"D006130|D005315"
"D005330"	"D000751"
"D005334"	"D001832"
"D005348"	"D001941"
"D005350"	"D018218"
"D005352"	"D001157"
"D005354"	"D018218|D012509"
"D005356"	"D012216|D009135"
"D005357"	"D010009"
"D005358"	"D005357"
"D005359"	"D005357"
"D005368"	"D017205"
"D005393"	"D000820"
"D005401"	"D001004"
"D005413"	"D000070558"
"D005458"	"D011041"
"D005489"	"D040181|D004476|D004413"
"D005494"	"D014804"
"D005499"	"D006201"
"D005512"	"D006969"
"D005530"	"D009140"
"D005534"	"D012871|D009140"
"D005536"	"D000820|D010850"
"D005585"	"D001715|D009976"
"D005600"	"D038901|D025064"
"D005611"	"D058533|D002418"
"D005621"	"D028361|D013132"
"D005633"	"D015318"
"D005642"	"D003317"
"D005645"	"D002239|D020140"
"D005687"	"D007775"
"D005693"	"D002239|D020739"
"D005705"	"D001660"
"D005715"	"D012309|D007174"
"D005736"	"D000015|D011125"
"D005738"	"D003015"
"D005756"	"D005759|D013272"
"D005757"	"D005756"
"D005758"	"D005756"
"D005759"	"D005767"
"D005764"	"D015154"
"D005767"	"D004066"
"D005770"	"D005767|D004067"
"D005776"	"D013106"
"D005831"	"D052776"
"D005832"	"D052801"
"D005833"	"D014565"
"D005834"	"D005832|D014565"
"D005865"	"D055703|D047109"
"D005870"	"D009372"
"D005871"	"D008232"
"D005873"	"D007411|D011528"
"D005878"	"D006933"
"D005879"	"D020271|D001480|D013981"
"D005882"	"D010510"
"D005884"	"D005882|D006472"
"D005891"	"D005882|D007239"
"D005892"	"D005674|D005891"
"D005896"	"D019121|D006734"
"D005901"	"D009798"
"D005902"	"D005901"
"D005909"	"D001254"
"D005910"	"D018302"
"D005921"	"D009393"
"D005922"	"D001327|D005921"
"D005923"	"D005921"
"D005928"	"D014060"
"D005935"	"D018273"
"D005953"	"D006008"
"D005955"	"D000745|D002239"
"D006008"	"D002239"
"D006009"	"D006008|D020140"
"D006012"	"D006008"
"D006013"	"D006008"
"D006014"	"D009136|D006008"
"D006015"	"D040181|D006008"
"D006029"	"D044882|D014555"
"D006030"	"D015499|D006029"
"D006042"	"D013959"
"D006043"	"D006042"
"D006044"	"D006042"
"D006053"	"D008342"
"D006058"	"D004700"
"D006059"	"D012734"
"D006061"	"D058490|D006059"
"D006069"	"D016870|D015231"
"D006073"	"D001168|D011686|D000070657|D012216"
"D006086"	"D007154"
"D006100"	"D015231|D017192|D004756"
"D006101"	"D005882|D006099|D007571"
"D006103"	"D009668"
"D006104"	"D006099"
"D006105"	"D040181|D010585"
"D006106"	"D010051|D018312"
"D006111"	"D001327|D006980|D006042|D005094"
"D006130"	"D010335"
"D006177"	"D001941"
"D006192"	"D016871"
"D006200"	"D055827|D010858"
"D006201"	"D012871"
"D006210"	"D003394"
"D006211"	"D020271|D001480|D019150|D009069"
"D006215"	"D005530"
"D006222"	"D009369"
"D006223"	"D009386|D009378|D006222"
"D006226"	"D009140"
"D006229"	"D012871"
"D006232"	"D003384"
"D006250"	"D020157|D020739|D000608"
"D006255"	"D065631"
"D006258"	"D009371"
"D006261"	"D010146"
"D006311"	"D004427|D012678"
"D006314"	"D034381"
"D006317"	"D006319"
"D006319"	"D034381"
"D006322"	"D006331|D000783"
"D006323"	"D006331"
"D006327"	"D000075224|D001145"
"D006330"	"D018376|D006331"
"D006331"	"D002318"
"D006333"	"D006331"
"D006334"	"D003935"
"D006343"	"D006330"
"D006344"	"D006343"
"D006345"	"D006343"
"D006349"	"D006331"
"D006357"	"D000820|D016873"
"D006362"	"D010265|D008232"
"D006373"	"D010272"
"D006391"	"D009383"
"D006392"	"D020141|D006391"
"D006393"	"D009383"
"D006394"	"D009383|D012509"
"D006395"	"D006470|D007592"
"D006400"	"D018056|D006403"
"D006402"	"D006425"
"D006408"	"D020198|D006406|D020300"
"D006409"	"D014591"
"D006417"	"D006470|D014555"
"D006429"	"D010243"
"D006432"	"D008664|D019190"
"D006445"	"D000745|D006453"
"D006453"	"D006402|D030342"
"D006456"	"D011507"
"D006457"	"D009190|D000743"
"D006463"	"D057049|D000743|D014511"
"D006467"	"D006474|D025861|D020147"
"D006468"	"D006491|D010995"
"D006471"	"D005767|D006470"
"D006474"	"D006402"
"D006475"	"D014813|D007228|D007232"
"D006482"	"D012327"
"D006483"	"D010326|D016470"
"D006484"	"D012002|D014652"
"D006486"	"D019190"
"D006501"	"D001928|D017093"
"D006504"	"D008107|D014652"
"D006505"	"D008107"
"D006506"	"D006525|D004769"
"D006509"	"D018347|D006525"
"D006519"	"D008108|D006505"
"D006525"	"D014777|D006505"
"D006526"	"D006525|D018178"
"D006527"	"D008107|D020271|D008664|D001480|D020739|D009069"
"D006528"	"D000230|D008113"
"D006530"	"D008107|D007674"
"D006547"	"D020763"
"D006552"	"D046449"
"D006556"	"D009293"
"D006557"	"D004457|D003384"
"D006558"	"D006561|D005832|D015229|D005831"
"D006559"	"D012872|D011248"
"D006560"	"D006561|D008047"
"D006561"	"D017193|D006566"
"D006562"	"D000073618"
"D006563"	"D006562|D015828"
"D006566"	"D004266"
"D006618"	"D009139"
"D006620"	"D025981|D005264"
"D006623"	"D000072661|D020752|D000798"
"D006627"	"D004065|D008531"
"D006628"	"D014770|D006201"
"D006646"	"D015614|D017563"
"D006660"	"D009181"
"D006689"	"D008223"
"D006726"	"D005141|D015818"
"D006800"	"D007153|D012192"
"D006810"	"D001134|D050723"
"D006816"	"D020271|D001480|D003704|D003072|D002819"
"D006828"	"D031901"
"D006831"	"D011248"
"D006832"	"D009421"
"D006849"	"D001927"
"D006850"	"D006849"
"D006869"	"D007674"
"D006925"	"D002590"
"D006929"	"D000308"
"D006933"	"D008661"
"D006934"	"D002128|D014883"
"D006936"	"D014076"
"D006937"	"D006949"
"D006939"	"D048968"
"D006943"	"D044882"
"D006945"	"D013543"
"D006946"	"D044882"
"D006947"	"D014883"
"D006949"	"D050171"
"D006950"	"D008052|D006949"
"D006952"	"D008052|D006951"
"D006953"	"D008052|D006951|D015228"
"D006954"	"D008052|D006951|D015228"
"D006956"	"D012030"
"D006957"	"D010009|D015576"
"D006958"	"D010009|D015576|D007232"
"D006959"	"D007674"
"D006961"	"D010279"
"D006962"	"D006961"
"D006964"	"D010900"
"D006965"	"D010335"
"D006966"	"D006964"
"D006967"	"D007154"
"D006971"	"D013158"
"D006972"	"D003394"
"D006973"	"D014652"
"D006974"	"D006973"
"D006975"	"D008107"
"D006976"	"D008171"
"D006977"	"D006973|D007674"
"D006980"	"D013959"
"D006981"	"D013959"
"D006983"	"D006201"
"D006986"	"D009748"
"D006994"	"D000309"
"D006995"	"D007009"
"D006996"	"D002128|D014883"
"D007003"	"D044882"
"D007006"	"D006058"
"D007007"	"D013543"
"D007008"	"D014883"
"D007009"	"D050171|D008052"
"D007010"	"D014883"
"D007011"	"D010279"
"D007012"	"D010610"
"D007014"	"D008664"
"D007018"	"D010900"
"D007020"	"D006474|D025861|D020147"
"D007021"	"D014564|D010409"
"D007022"	"D014652"
"D007027"	"D001927"
"D007029"	"D015173|D007027"
"D007035"	"D001832"
"D007037"	"D013959"
"D007039"	"D006201"
"D007049"	"D020969"
"D007057"	"D012868|D007642|D007232"
"D007078"	"D007414|D007077"
"D007079"	"D004751|D007077"
"D007105"	"D006967"
"D007119"	"D000072281|D008232"
"D007153"	"D007154"
"D007161"	"D007414|D008223|D006362|D008232"
"D007169"	"D013207|D013290"
"D007172"	"D012735|D020018"
"D007177"	"D010900|D014883"
"D007184"	"D012868|D010859|D000015|D012873"
"D007230"	"D007231"
"D007244"	"D020031|D007960|D008232"
"D007246"	"D005832|D005831"
"D007247"	"D007246"
"D007248"	"D007246"
"D007251"	"D012141|D009976"
"D007319"	"D020919"
"D007360"	"D010551"
"D007383"	"D001161|D012816"
"D007405"	"D006547|D013122"
"D007410"	"D005767"
"D007411"	"D010272|D007410"
"D007412"	"D016154|D007410"
"D007414"	"D007410|D005770"
"D007415"	"D007410"
"D007416"	"D007410"
"D007417"	"D011127"
"D007418"	"D045823"
"D007443"	"D007415"
"D007499"	"D014603"
"D007500"	"D014606|D007499"
"D007511"	"D010335"
"D007562"	"D003704|D017096"
"D007565"	"D012877|D006932"
"D007566"	"D006933|D007567"
"D007567"	"D051556"
"D007573"	"D007571|D012888"
"D007580"	"D007579|D007414"
"D007592"	"D009140"
"D007619"	"D030342|D001987|D002925|D015619|D003914"
"D007625"	"D009202|D017246|D028361|D012174"
"D007627"	"D003095|D002921"
"D007634"	"D003316"
"D007635"	"D016849"
"D007636"	"D012871"
"D007637"	"D003231|D007634"
"D007638"	"D007637|D015352"
"D007640"	"D003316"
"D007642"	"D012871"
"D007644"	"D007642|D012873"
"D007645"	"D007642|D012873"
"D007647"	"D001928|D004899|D006932"
"D007673"	"D007674"
"D007674"	"D014570"
"D007676"	"D051436"
"D007680"	"D014571|D007674"
"D007681"	"D007674"
"D007683"	"D058186"
"D007691"	"D052177"
"D007706"	"D038901|D008664|D006201|D020739"
"D007710"	"D004756"
"D007713"	"D007006|D058533"
"D007714"	"D009139|D004413"
"D007715"	"D000798"
"D007724"	"D014845"
"D007725"	"D018279"
"D007729"	"D017096"
"D007732"	"D000067011"
"D007759"	"D004427"
"D007805"	"D007806"
"D007806"	"D003147"
"D007818"	"D010038|D012140"
"D007822"	"D010039|D012142|D007818"
"D007827"	"D012141|D007818"
"D007835"	"D001117|D006482"
"D007849"	"D007027|D000015"
"D007859"	"D065886|D003147"
"D007873"	"D005271"
"D007876"	"D012141|D016905"
"D007877"	"D007876"
"D007888"	"D015323|D028361|D020739"
"D007889"	"D009379"
"D007890"	"D009379|D012509"
"D007896"	"D056986|D000079426|D012876"
"D007897"	"D016773"
"D007898"	"D007896"
"D007905"	"D005128"
"D007918"	"D009165"
"D007922"	"D013145"
"D007926"	"D011686|D038901|D020739"
"D007938"	"D009370"
"D007943"	"D007938|D008232"
"D007945"	"D007938|D008232"
"D007946"	"D034721|D007938|D015470"
"D007947"	"D015470"
"D007948"	"D015470"
"D007951"	"D007938"
"D007952"	"D007938|D009101"
"D007955"	"D007964|D009196"
"D007960"	"D006402"
"D007965"	"D020279|D013106"
"D007966"	"D020279|D052516"
"D007968"	"D018792|D012897|D003711|D027601|D056784"
"D007969"	"D002561|D007235|D004678"
"D007970"	"D007960"
"D007971"	"D011230|D020763"
"D007972"	"D009062|D007971"
"D007984"	"D018310"
"D008010"	"D017512"
"D008047"	"D009059"
"D008048"	"D009062|D008047"
"D008059"	"D009083"
"D008060"	"D012875|D052439"
"D008061"	"D008286|D000196"
"D008064"	"D008052|D052439"
"D008065"	"D006685|D012873"
"D008067"	"D018205"
"D008068"	"D012871|D052439"
"D008074"	"D008055|D011506"
"D008077"	"D008074"
"D008078"	"D002784|D008077"
"D008080"	"D012509|D018205"
"D008088"	"D016908"
"D008103"	"D008107|D005355"
"D008104"	"D008103|D008108"
"D008105"	"D008103|D002780"
"D008107"	"D004066"
"D008108"	"D008107|D020751"
"D008118"	"D005368"
"D008133"	"D000075224|D001145|D006330"
"D008136"	"D000375|D010829"
"D008146"	"D012757|D018177"
"D008151"	"D011226"
"D008158"	"D009059|D002481"
"D008166"	"D011213|D002418"
"D008169"	"D012141|D000038|D008171"
"D008171"	"D012140"
"D008172"	"D009181|D012141|D008171"
"D008173"	"D008171"
"D008175"	"D008171|D012142"
"D008177"	"D014382"
"D008178"	"D012871|D003240"
"D008180"	"D001327|D003240"
"D008181"	"D008180|D005921"
"D008193"	"D001899|D016905|D017282"
"D008199"	"D008206"
"D008200"	"D008206"
"D008202"	"D018190"
"D008203"	"D018190|D008232"
"D008204"	"D018190|D012509"
"D008205"	"D008206"
"D008206"	"D006425"
"D008209"	"D008206"
"D008219"	"D002690"
"D008223"	"D009370|D008232"
"D008228"	"D008223"
"D008231"	"D007970|D007153"
"D008232"	"D008206|D007160"
"D008258"	"D020141|D010265|D054219|D008232"
"D008260"	"D014060"
"D008265"	"D009056"
"D008268"	"D012162"
"D008275"	"D003677"
"D008286"	"D008659|D007410"
"D008287"	"D010335"
"D008288"	"D000079426|D011528"
"D008305"	"D011183|D007431"
"D008342"	"D003103|D003394"
"D008363"	"D044904"
"D008368"	"D005368"
"D008375"	"D020739|D000592"
"D008379"	"D008992|D006482|D018702"
"D008382"	"D001848|D030342|D006330|D000015|D003240"
"D008413"	"D011644|D001941"
"D008414"	"D002418"
"D008415"	"D009372|D012871|D007105"
"D008441"	"D008439|D007573"
"D008444"	"D010255"
"D008450"	"D005540"
"D008457"	"D018185"
"D008467"	"D004240|D007082|D004065"
"D008471"	"D055370|D012120|D005315|D007232"
"D008477"	"D013896"
"D008479"	"D008477|D013899"
"D008527"	"D005910|D018242"
"D008531"	"D003108"
"D008538"	"D020821|D001480"
"D008545"	"D018326|D018358"
"D008554"	"D019121"
"D008556"	"D009059|D005155"
"D008557"	"D010026"
"D008569"	"D019954"
"D008575"	"D018159"
"D008579"	"D008577|D009383|D009380"
"D008581"	"D002493"
"D008582"	"D008581"
"D008584"	"D008088|D016920"
"D008585"	"D008589|D016920"
"D008586"	"D016920|D011008"
"D008587"	"D008581|D020805"
"D008589"	"D016870"
"D008590"	"D008581|D020805|D002494|D004660"
"D008591"	"D009436"
"D008594"	"D010049|D008593"
"D008595"	"D008599|D014592"
"D008607"	"D065886|D019954"
"D008630"	"D000075322"
"D008637"	"D018193"
"D008641"	"D010532|D007410|D001157"
"D008654"	"D000236|D018301"
"D008659"	"D009750"
"D008661"	"D008659|D030342"
"D008664"	"D008661"
"D008708"	"D006402"
"D008796"	"D014592"
"D008844"	"D007569"
"D008850"	"D005124"
"D008878"	"D001261"
"D008881"	"D051270"
"D008883"	"D013543"
"D008924"	"D004478"
"D008944"	"D006349"
"D008945"	"D016127"
"D008946"	"D006349"
"D008947"	"D003240"
"D008976"	"D017193|D011213"
"D008998"	"D010265|D006942"
"D009006"	"D000782"
"D009011"	"D000072039|D014458"
"D009021"	"D009293"
"D009041"	"D012816"
"D009050"	"D014076"
"D009056"	"D009059|D018640"
"D009059"	"D009057"
"D009069"	"D002493"
"D009072"	"D002539|D002340|D001157"
"D009080"	"D017445|D014657|D008206"
"D009081"	"D002239|D001851|D020140"
"D009083"	"D016464|D002239|D017520"
"D009084"	"D009083"
"D009085"	"D009083"
"D009087"	"D009083"
"D009091"	"D020096"
"D009100"	"D002239|D000592"
"D009101"	"D020141|D010265|D054219|D008232"
"D009103"	"D020278"
"D009107"	"D019351|D010309"
"D009120"	"D020879|D009135"
"D009122"	"D020879"
"D009123"	"D020879"
"D009127"	"D009122|D009135"
"D009128"	"D009122|D009135"
"D009133"	"D001284|D020879"
"D009134"	"D013118|D016472"
"D009135"	"D009140|D009468"
"D009136"	"D030342|D020966"
"D009157"	"D020361|D020274|D020511"
"D009164"	"D000193"
"D009181"	"D001423"
"D009182"	"D016410"
"D009187"	"D013118|D002494"
"D009190"	"D001855"
"D009196"	"D001855"
"D009198"	"D004478"
"D009202"	"D006331"
"D009203"	"D007238|D017202"
"D009205"	"D009202"
"D009208"	"D018193"
"D009209"	"D009135"
"D009212"	"D012206"
"D009214"	"D009379"
"D009216"	"D012030"
"D009220"	"D009135"
"D009221"	"D009220"
"D009223"	"D020271|D020967|D009136"
"D009224"	"D020271|D020967"
"D009230"	"D017520|D007037"
"D009232"	"D009372"
"D009236"	"D009372|D012509"
"D009260"	"D012871"
"D009261"	"D030342|D000015|D009260|D007592"
"D009264"	"D020763"
"D009290"	"D006970"
"D009293"	"D000079524"
"D009298"	"D011127|D009668"
"D009302"	"D010608"
"D009303"	"D010610|D009302"
"D009304"	"D009302|D010612"
"D009325"	"D012817"
"D009332"	"D006725"
"D009335"	"D012875|D017441"
"D009349"	"D006373"
"D009357"	"D019966|D007232"
"D009362"	"D009385"
"D009372"	"D018204|D003240"
"D009373"	"D009370"
"D009375"	"D009370"
"D009379"	"D018204"
"D009383"	"D009370"
"D009386"	"D009369|D030342"
"D009393"	"D007674"
"D009394"	"D003095|D014564|D009393"
"D009395"	"D009393"
"D009396"	"D009386|D018193|D007680"
"D009397"	"D002114|D007674"
"D009400"	"D007674"
"D009401"	"D007674"
"D009402"	"D009401"
"D009404"	"D009401"
"D009408"	"D010523"
"D009421"	"D009422|D000013"
"D009423"	"D009422|D009371"
"D009436"	"D009421"
"D009437"	"D010146|D010523"
"D009443"	"D010523"
"D009447"	"D018241"
"D009450"	"D003872|D017443"
"D009455"	"D018317"
"D009456"	"D017253|D010523"
"D009459"	"D001480|D020258"
"D009464"	"D010039|D009442|D003390|D000160"
"D009468"	"D009422"
"D009471"	"D009188|D020278|D009902"
"D009472"	"D020271|D008064"
"D009477"	"D020271|D009421|D011115"
"D009483"	"D011581"
"D009497"	"D001008|D001523"
"D009503"	"D000380"
"D009506"	"D018326"
"D009507"	"D009508"
"D009521"	"D001715|D045463"
"D009542"	"D013106|D015616"
"D009617"	"D000193"
"D009625"	"D009059"
"D009634"	"D019465|D006330|D003240"
"D009668"	"D010038|D012140"
"D009669"	"D010039|D009668|D012888|D012142"
"D009748"	"D009750"
"D009755"	"D014786"
"D009759"	"D015835"
"D009767"	"D009765"
"D009771"	"D001008"
"D009783"	"D009784|D003877"
"D009798"	"D005128"
"D009800"	"D015499|D020157|D040181|D030342|D020739|D000015"
"D009807"	"D007570"
"D009808"	"D009370"
"D009837"	"D005910"
"D009855"	"D005368|D012876"
"D009869"	"D010049|D000292"
"D009877"	"D015817"
"D009879"	"D001327|D015864"
"D009886"	"D015835|D010243"
"D009889"	"D014201"
"D009896"	"D009901"
"D009901"	"D003389|D005128"
"D009902"	"D009901"
"D009914"	"D009059"
"D009916"	"D005128"
"D009920"	"D013733"
"D009956"	"D023521"
"D009958"	"D019465|D030342|D004413|D000015|D025064"
"D009959"	"D010610"
"D009976"	"D012327"
"D009999"	"D010335"
"D010000"	"D001847"
"D010002"	"D001849"
"D010003"	"D001168|D012216"
"D010004"	"D030342|D001847|D007592"
"D010005"	"D001847|D007592"
"D010008"	"D010007"
"D010009"	"D001848|D030342"
"D010013"	"D003095|D010009|D030342"
"D010014"	"D001862"
"D010016"	"D018213"
"D010018"	"D012279"
"D010019"	"D001850"
"D010020"	"D009336|D001847"
"D010022"	"D010026"
"D010023"	"D003240|D010026"
"D010024"	"D001851"
"D010026"	"D010009"
"D010031"	"D004427"
"D010032"	"D010031"
"D010033"	"D010031"
"D010034"	"D010033"
"D010035"	"D010033|D013492"
"D010040"	"D004427"
"D010048"	"D010049|D003560"
"D010049"	"D000291|D006058"
"D010051"	"D004701|D010049|D005833"
"D010145"	"D000230|D018299"
"D010146"	"D012677|D009461"
"D010182"	"D004066"
"D010188"	"D010182"
"D010190"	"D004701|D010182|D004067"
"D010195"	"D010182"
"D010198"	"D006402"
"D010201"	"D015434"
"D010211"	"D009901"
"D010212"	"D018307"
"D010214"	"D007645"
"D010217"	"D001102|D002044"
"D010229"	"D009181"
"D010235"	"D018358"
"D010237"	"D014201"
"D010243"	"D009461"
"D010244"	"D016472"
"D010245"	"D008664|D009135"
"D010254"	"D009668"
"D010255"	"D010254|D009669"
"D010257"	"D009369"
"D010262"	"D001523"
"D010263"	"D010688"
"D010264"	"D010243"
"D010265"	"D001796|D007160"
"D010267"	"D017444"
"D010272"	"D007239"
"D010279"	"D004700"
"D010284"	"D012480"
"D010291"	"D009461"
"D010300"	"D000080874|D020734"
"D010301"	"D010302"
"D010302"	"D020734"
"D010304"	"D012874|D009260"
"D010305"	"D012466"
"D010307"	"D010305|D012468"
"D010309"	"D010305|D012793"
"D010322"	"D004266"
"D010326"	"D016871"
"D010381"	"D007960|D030342"
"D010382"	"D008107|D014652"
"D010383"	"D014804"
"D010391"	"D001327|D012872"
"D010392"	"D001327|D012872"
"D010409"	"D005832"
"D010412"	"D010409|D005834"
"D010437"	"D004378|D013272"
"D010439"	"D010437"
"D010468"	"D019954"
"D010482"	"D000038|D010485"
"D010484"	"D010485"
"D010485"	"D010518|D010483"
"D010488"	"D017445|D001167|D056647"
"D010489"	"D001168|D002062"
"D010493"	"D006331"
"D010494"	"D010493"
"D010495"	"D014381|D010493"
"D010497"	"D005882"
"D010501"	"D007674"
"D010505"	"D056660"
"D010510"	"D009059"
"D010518"	"D010510"
"D010520"	"D010518"
"D010523"	"D009468"
"D010524"	"D009423|D010523"
"D010532"	"D004066"
"D010534"	"D010532|D000008|D004067"
"D010547"	"D006976|D007232"
"D010554"	"D001523"
"D010580"	"D009386|D007911|D044483"
"D010585"	"D007960|D007153"
"D010610"	"D010039|D010608"
"D010612"	"D012141|D010608"
"D010661"	"D020739|D000592"
"D010688"	"D010409"
"D010689"	"D014657|D016491"
"D010698"	"D001008"
"D010760"	"D008659"
"D010787"	"D012871"
"D010845"	"D009765|D007040|D020181"
"D010850"	"D012327"
"D010854"	"D009181|D006201"
"D010859"	"D012871|D010335"
"D010874"	"D014211|D017192"
"D010899"	"D010900|D020300"
"D010900"	"D004700|D007027"
"D010916"	"D010915"
"D010921"	"D010922|D007744"
"D010922"	"D011248"
"D010923"	"D010922|D007744"
"D010927"	"D010922"
"D010930"	"D015009|D000079426"
"D010954"	"D054219|D008232"
"D010981"	"D006474|D001791|D001778"
"D010995"	"D012140"
"D010998"	"D012141|D010995"
"D011000"	"D003384"
"D011002"	"D000820|D009175"
"D011006"	"D007410"
"D011007"	"D001930|D002493"
"D011008"	"D013290"
"D011009"	"D055370|D009784|D017563"
"D011014"	"D012141|D008171"
"D011015"	"D011014"
"D011017"	"D011015"
"D011018"	"D018410|D011008"
"D011019"	"D018410|D009175"
"D011020"	"D011014|D016720|D008172"
"D011023"	"D018410|D013203"
"D011024"	"D011014|D014777"
"D011030"	"D010995"
"D011038"	"D012868|D049914|D012873|D007232"
"D011040"	"D017449"
"D011041"	"D064419"
"D011045"	"D013576"
"D011051"	"D009187|D004769|D009468"
"D011081"	"D002357"
"D011085"	"D010048"
"D011086"	"D006402"
"D011087"	"D019046|D009196"
"D011111"	"D012216|D009135"
"D011115"	"D010523"
"D011123"	"D011003|D002869"
"D011125"	"D009386|D018256|D044483|D015179"
"D011127"	"D020763"
"D011129"	"D020274|D003711|D011115"
"D011141"	"D020924|D014555"
"D011146"	"D012872|D004485"
"D011164"	"D008659"
"D011178"	"D011183|D013272"
"D011186"	"D010689|D014689"
"D011191"	"D003677"
"D011218"	"D009765|D008607|D025063|D000015"
"D011225"	"D046110"
"D011230"	"D009369"
"D011236"	"D003920"
"D011248"	"D005261"
"D011293"	"D008599"
"D011305"	"D012030"
"D011349"	"D012002|D005759"
"D011371"	"D008661"
"D011469"	"D005832"
"D011470"	"D011469"
"D011471"	"D011469|D005834"
"D011472"	"D011469"
"D011502"	"D011488"
"D011504"	"D007410"
"D011507"	"D020924|D014555"
"D011528"	"D010272"
"D011535"	"D000015"
"D011537"	"D012877|D012871"
"D011546"	"D015499"
"D011547"	"D002128|D008664|D001851"
"D011552"	"D016905"
"D011553"	"D018297"
"D011556"	"D011547"
"D011557"	"D000820|D020805|D006566"
"D011559"	"D019586"
"D011561"	"D012868|D020141|D003240|D012873"
"D011565"	"D017444"
"D011597"	"D009424|D011579|D009142"
"D011604"	"D011605|D019973|D020751"
"D011605"	"D019966|D011618|D011041"
"D011625"	"D003229"
"D011628"	"D006058"
"D011629"	"D006058"
"D011644"	"D011248"
"D011645"	"D011251|D011644"
"D011649"	"D008171"
"D011654"	"D008171"
"D011655"	"D004617|D008171"
"D011656"	"D029424"
"D011658"	"D008171"
"D011660"	"D006331"
"D011666"	"D006349|D014694"
"D011668"	"D014652|D008171"
"D011671"	"D003788"
"D011686"	"D008661"
"D011693"	"D012877|D006470|D001778"
"D011695"	"D014657|D020141|D011693|D007105"
"D011696"	"D007154|D011693|D057049"
"D011697"	"D011696|D019851"
"D011702"	"D009393"
"D011704"	"D011702|D009395"
"D011705"	"D011704"
"D011707"	"D017219"
"D011711"	"D012871"
"D011778"	"D016905"
"D011818"	"D018353"
"D011855"	"D003872|D011832"
"D011885"	"D050723|D005543"
"D011906"	"D016905"
"D011928"	"D016491"
"D012002"	"D007410"
"D012003"	"D012002|D007412"
"D012004"	"D015179"
"D012005"	"D012002|D056887"
"D012010"	"D000740"
"D012019"	"D020918"
"D012030"	"D005128"
"D012035"	"D015417|D020739|D018901"
"D012078"	"D007674|D001157"
"D012080"	"D012279|D006962|D007674"
"D012088"	"D012327"
"D012128"	"D008171|D012120"
"D012131"	"D012120"
"D012133"	"D010243|D012131"
"D012141"	"D007239|D012140"
"D012142"	"D012140|D013899"
"D012148"	"D009422|D020447|D020919"
"D012162"	"D015785|D012164"
"D012163"	"D012164"
"D012164"	"D005128"
"D012170"	"D014652|D020246|D012164"
"D012173"	"D012164"
"D012174"	"D015785|D058499"
"D012175"	"D015785|D019572|D018302"
"D012178"	"D007235|D012164"
"D012181"	"D004427"
"D012186"	"D000008"
"D012192"	"D012327"
"D012202"	"D001928|D005234"
"D012206"	"D009135"
"D012207"	"D009214"
"D012208"	"D009217"
"D012213"	"D001168|D013290|D012216"
"D012214"	"D006331|D012213"
"D012215"	"D012213"
"D012216"	"D009140|D003240"
"D012220"	"D012141|D009668"
"D012222"	"D012220"
"D012223"	"D012220"
"D012226"	"D012141|D007710|D017192|D009668"
"D012279"	"D014808|D002128|D001851"
"D012282"	"D012288"
"D012288"	"D016905|D000079426"
"D012295"	"D001102|D006524|D006482|D002044"
"D012393"	"D012871"
"D012400"	"D012088"
"D012409"	"D018355"
"D012415"	"D019465|D008607|D025063|D004413|D000015"
"D012466"	"D009059"
"D012468"	"D012466|D009062"
"D012478"	"D005517|D012480"
"D012480"	"D004756"
"D012497"	"D020143"
"D012507"	"D008232"
"D012509"	"D018204"
"D012512"	"D012516"
"D012514"	"D009383|D006566|D012509"
"D012515"	"D008415"
"D012516"	"D018213|D012509"
"D012523"	"D003048"
"D012532"	"D008924|D012876"
"D012541"	"D013290"
"D012552"	"D014201|D000079426"
"D012553"	"D012552|D014552"
"D012585"	"D020426|D009437"
"D012587"	"D054079|D014652|D015619|D008171"
"D012594"	"D012871|D003240"
"D012595"	"D012871|D003240"
"D012600"	"D013121"
"D012608"	"D012757|D017096"
"D012612"	"D012288"
"D012614"	"D020141|D001206"
"D012618"	"D013106|D015616"
"D012625"	"D012871"
"D012626"	"D012625|D012878"
"D012628"	"D003872|D012625|D017444|D017443"
"D012640"	"D009461"
"D012700"	"D007249"
"D012713"	"D003875|D007105"
"D012734"	"D006058|D014564"
"D012735"	"D005832|D005831"
"D012744"	"D055614|D017678"
"D012749"	"D007239|D005832|D005831"
"D012751"	"D016410|D008232"
"D012766"	"D010253|D048090|D016871"
"D012773"	"D011183|D012769"
"D012778"	"D011183|D008286"
"D012779"	"D010009|D017689|D000015"
"D012793"	"D012466"
"D012797"	"D012466"
"D012798"	"D012466"
"D012804"	"D006327|D001146"
"D012829"	"D011009"
"D012852"	"D010254|D012141"
"D012857"	"D000013"
"D012859"	"D014987|D001172|D015352"
"D012871"	"D017437"
"D012872"	"D012871"
"D012873"	"D030342|D012871"
"D012874"	"D007239|D012871"
"D012876"	"D012874|D010272"
"D012878"	"D009371|D012871"
"D012883"	"D012871"
"D012891"	"D001049|D020919"
"D012893"	"D009422|D009461|D001523"
"D012899"	"D011213"
"D013001"	"D001523"
"D013005"	"D018273|D018278"
"D013031"	"D004169"
"D013064"	"D007806"
"D013067"	"D001307"
"D013088"	"D005832|D003560"
"D013103"	"D000745"
"D013106"	"D008064|D020140"
"D013117"	"D013119|D013118"
"D013118"	"D002493"
"D013119"	"D020196|D014947|D013118"
"D013122"	"D001847"
"D013124"	"D019567"
"D013128"	"D013122"
"D013130"	"D013122"
"D013145"	"D016905"
"D013158"	"D008206"
"D013159"	"D014652|D007238|D013158"
"D013160"	"D009371|D013158"
"D013166"	"D013122|D001850"
"D013167"	"D025242|D000844"
"D013168"	"D013169"
"D013169"	"D055009"
"D013174"	"D003881"
"D013202"	"D005517|D013203"
"D013203"	"D016908"
"D013206"	"D013207"
"D013224"	"D001249"
"D013226"	"D012640"
"D013231"	"D000820|D014811"
"D013239"	"D001519"
"D013262"	"D003875|D013280|D004892"
"D013272"	"D005767"
"D013274"	"D013272|D005770"
"D013276"	"D010437"
"D013280"	"D009059"
"D013281"	"D013280"
"D013282"	"D013280"
"D013283"	"D013280|D006561"
"D013285"	"D015835"
"D013290"	"D016908"
"D013313"	"D040921"
"D013322"	"D017196"
"D013330"	"D013724"
"D013341"	"D006391|D020752|D000798"
"D013344"	"D018792|D012897|D008457"
"D013345"	"D020300"
"D013349"	"D014715"
"D013353"	"D020819|D001927"
"D013354"	"D020819|D004653"
"D013364"	"D012466"
"D013365"	"D013364|D012468"
"D013369"	"D018784|D010538"
"D013375"	"D019966"
"D013398"	"D066088|D003645"
"D013406"	"D013405"
"D013436"	"D006402"
"D013471"	"D010787|D002056"
"D013494"	"D001480|D024801|D009886|D009069"
"D013543"	"D012871"
"D013544"	"D012878|D013543"
"D013546"	"D012879|D001833"
"D013547"	"D006945|D001342"
"D013575"	"D014474"
"D013576"	"D017880|D013580"
"D013577"	"D004194"
"D013580"	"D009139|D004413"
"D013584"	"D009372|D012509"
"D013585"	"D007592"
"D013586"	"D000070779"
"D013587"	"D015231|D014211"
"D013590"	"D013587|D007232"
"D013592"	"D013587"
"D013606"	"D009494|D013118"
"D013610"	"D000075224|D001145"
"D013613"	"D013617"
"D013617"	"D013610"
"D013622"	"D002590"
"D013625"	"D017445|D001167|D001015"
"D013631"	"D052456|D011115"
"D013641"	"D020429|D009408"
"D013661"	"D020143"
"D013683"	"D054079|D020141|D013684"
"D013684"	"D014652"
"D013700"	"D017445|D020293|D001167"
"D013705"	"D017271|D009057|D007592"
"D013716"	"D000070639|D001134"
"D013717"	"D052256"
"D013724"	"D009373"
"D013733"	"D006058|D005832"
"D013734"	"D058490|D040181"
"D013736"	"D004701|D013733|D005834"
"D013742"	"D003015"
"D013771"	"D006330"
"D013786"	"D001927"
"D013789"	"D000745|D006453"
"D013796"	"D017880|D000130|D007232"
"D013801"	"D017282|D011529|D002418|D011528"
"D013851"	"D001835"
"D013896"	"D012140"
"D013901"	"D014652|D009408"
"D013915"	"D006474|D025861|D001791"
"D013919"	"D014657|D001157"
"D013920"	"D006474|D013922|D001778"
"D013921"	"D001791"
"D013922"	"D001791|D009196"
"D013924"	"D010689|D020246"
"D013927"	"D016769"
"D013945"	"D013953|D018193"
"D013952"	"D008206"
"D013953"	"D008206|D013899"
"D013955"	"D003560"
"D013958"	"D013971"
"D013959"	"D004700"
"D013964"	"D004701|D006258|D013959"
"D013966"	"D013959"
"D013967"	"D001327|D013966"
"D013968"	"D013966"
"D013969"	"D013492|D013966"
"D013971"	"D006980"
"D013978"	"D050723|D007869"
"D013981"	"D065886|D009069"
"D013984"	"D004478"
"D013985"	"D013986"
"D014007"	"D014006"
"D014008"	"D011537|D014005|D005533"
"D014009"	"D014005|D009260"
"D014010"	"D003881"
"D014012"	"D006311"
"D014029"	"D019966"
"D014036"	"D012327"
"D014060"	"D009059"
"D014062"	"D014060|D009062"
"D014067"	"D009959"
"D014069"	"D010612"
"D014071"	"D018640|D014076"
"D014076"	"D009057"
"D014120"	"D017191|D006374"
"D014123"	"D003048"
"D014125"	"D014123|D020808|D007232"
"D014126"	"D014123|D015822"
"D014133"	"D012140"
"D014134"	"D014133|D006258|D012142"
"D014136"	"D012141|D014133"
"D014138"	"D016156|D014133|D004937"
"D014205"	"D001474"
"D014211"	"D016905|D013145"
"D014245"	"D011528"
"D014247"	"D014627|D014245"
"D014252"	"D017206"
"D014253"	"D014252"
"D014257"	"D017189"
"D014263"	"D016127"
"D014277"	"D020433"
"D014314"	"D058674|D000782"
"D014323"	"D008924"
"D014328"	"D009373|D011252"
"D014352"	"D056986"
"D014353"	"D000079426|D014352"
"D014355"	"D000079426|D014352"
"D014376"	"D009164"
"D014379"	"D001715|D014376"
"D014380"	"D014376|D002418"
"D014383"	"D014376|D004700"
"D014384"	"D014401|D005831"
"D014385"	"D005767|D014376"
"D014386"	"D008107|D014376"
"D014387"	"D012141|D014376|D007818"
"D014388"	"D014376"
"D014390"	"D016920|D020306"
"D014391"	"D014376"
"D014392"	"D015818"
"D014393"	"D009059|D014376"
"D014394"	"D014376|D001850"
"D014395"	"D014376|D010538"
"D014396"	"D012141|D014376|D010995"
"D014397"	"D012141|D014376|D008171"
"D014398"	"D007674|D014401"
"D014401"	"D052776|D052801|D014376"
"D014402"	"D009386|D020271|D065703|D009378|D020752|D006222"
"D014406"	"D016905|D017282"
"D014424"	"D058533|D006330|D006059"
"D014435"	"D012480"
"D014438"	"D012282"
"D014456"	"D010335"
"D014458"	"D050723|D005543"
"D014496"	"D003560"
"D014511"	"D007674"
"D014515"	"D014570"
"D014516"	"D014571|D014515"
"D014518"	"D014515"
"D014522"	"D014570"
"D014526"	"D014522"
"D014549"	"D014555|D059411"
"D014564"	"D052776|D052801|D000013"
"D014565"	"D052776|D052801|D009371"
"D014570"	"D052776|D052801"
"D014571"	"D014565"
"D014581"	"D017445|D006969"
"D014591"	"D005831"
"D014593"	"D004420"
"D014594"	"D014591|D005833"
"D014603"	"D005128"
"D014604"	"D014603|D005134"
"D014605"	"D014603"
"D014607"	"D020274|D014605"
"D014623"	"D005831"
"D014625"	"D005833|D014623"
"D014627"	"D014623"
"D014648"	"D014652"
"D014652"	"D002318"
"D014657"	"D014652"
"D014689"	"D014652"
"D014693"	"D001145"
"D014694"	"D006331"
"D014715"	"D002545"
"D014717"	"D009461|D015837"
"D014718"	"D001745"
"D014735"	"D016905"
"D014777"	"D007239"
"D014786"	"D005128|D012678"
"D014802"	"D001361"
"D014804"	"D001361"
"D014806"	"D014804"
"D014820"	"D017496"
"D014832"	"D009461|D007818"
"D014842"	"D006474|D025861|D001791|D020147"
"D014845"	"D005831"
"D014846"	"D014845|D005833"
"D014847"	"D014845"
"D014848"	"D014627|D014847"
"D014849"	"D000015"
"D014854"	"D020526"
"D014860"	"D014412|D030361|D017193"
"D014884"	"D006474|D000309|D011693|D008585"
"D014890"	"D056648|D017563"
"D014897"	"D009134|D020271"
"D014898"	"D049914|D030342"
"D014899"	"D001928|D013832|D019973"
"D014901"	"D004671|D018177"
"D014917"	"D001885|D012141"
"D014923"	"D006474|D025861|D040181|D008231|D000081207"
"D014924"	"D006967|D012213"
"D014929"	"D015418|D003922|D003919|D054062"
"D014972"	"D012871|D015616"
"D014983"	"D012868|D049914|D010859|D011230|D012873|D010787"
"D014997"	"D012729|D059786"
"D015001"	"D014211|D017192"
"D015004"	"D001102|D006482|D018177"
"D015009"	"D004756"
"D015012"	"D015009"
"D015043"	"D010437|D013272|D007410|D009384|D005770"
"D015047"	"D000820|D007239"
"D015140"	"D002537|D003704|D002561|D056784"
"D015154"	"D003680"
"D015173"	"D001932"
"D015175"	"D000236|D010911"
"D015179"	"D012002|D007414|D003108"
"D015192"	"D001932"
"D015207"	"D010003"
"D015211"	"D008107|D007674|D020739|D000015|D018901"
"D015212"	"D005759|D007410"
"D015223"	"D015217|D007232"
"D015228"	"D006949"
"D015229"	"D014777|D012749"
"D015231"	"D001424|D012749"
"D015266"	"D014412|D018278|D027601"
"D015267"	"D056648|D006099"
"D015270"	"D009165"
"D015275"	"D008232"
"D015299"	"D013166"
"D015324"	"D015323|D028361|D020739"
"D015325"	"D038901|D015323|D028361|D020739"
"D015352"	"D007766"
"D015354"	"D014786"
"D015355"	"D005901"
"D015356"	"D012164|D001157"
"D015390"	"D005763|D050110"
"D015408"	"D018273"
"D015417"	"D020271|D009421|D011115"
"D015418"	"D015785|D020271|D009896"
"D015419"	"D015417"
"D015422"	"D005128"
"D015423"	"D015422"
"D015427"	"D011183|D014652"
"D015430"	"D001836"
"D015431"	"D001836"
"D015432"	"D007154|D005921"
"D015433"	"D001327|D005921"
"D015434"	"D012871|D003240"
"D015439"	"D056005"
"D015440"	"D056006"
"D015441"	"D056005"
"D015451"	"D015448"
"D015458"	"D007945"
"D015461"	"D015458|D015463"
"D015463"	"D007945"
"D015467"	"D009196"
"D015470"	"D007951"
"D015471"	"D015470"
"D015473"	"D015470"
"D015477"	"D007951|D054437"
"D015479"	"D007951"
"D015490"	"D006800"
"D015491"	"D006800"
"D015493"	"D009187|D015490"
"D015494"	"D020792"
"D015499"	"D030342|D007674|D008661"
"D015508"	"D009668|D000402"
"D015518"	"D038901"
"D015521"	"D012852"
"D015523"	"D012852"
"D015524"	"D012852"
"D015526"	"D003704|D015658"
"D015535"	"D025242|D001168|D011565"
"D015576"	"D001847"
"D015593"	"D012162"
"D015595"	"D012879"
"D015605"	"D011213"
"D015614"	"D008206"
"D015616"	"D015614"
"D015620"	"D015614|D009370"
"D015624"	"D009157"
"D015658"	"D016180|D007153|D015229"
"D015663"	"D010024"
"D015673"	"D014777|D004679|D009135|D009468"
"D015715"	"D003316"
"D015746"	"D010146|D012817"
"D015783"	"D015785|D005124|D007499"
"D015794"	"D015785|D040181|D015862"
"D015812"	"D005901"
"D015817"	"D007239|D005128"
"D015822"	"D010272|D015817"
"D015823"	"D015822|D007634|D000562"
"D015826"	"D010009"
"D015827"	"D009855|D015822|D000079426"
"D015828"	"D014777|D015817"
"D015837"	"D007759"
"D015838"	"D007592"
"D015840"	"D015835"
"D015841"	"D009916"
"D015862"	"D014603"
"D015863"	"D014606|D007499"
"D015864"	"D014605"
"D015866"	"D015864"
"D015867"	"D014605"
"D015868"	"D015867|D002833"
"D015882"	"D012173"
"D016055"	"D014555"
"D016080"	"D020863|D003560"
"D016098"	"D020271|D017096"
"D016103"	"D050723|D013124"
"D016104"	"D011248"
"D016107"	"D004820"
"D016108"	"D004820|D003095"
"D016109"	"D004820"
"D016110"	"D004820"
"D016111"	"D007057|D008064|D012873"
"D016114"	"D040181|D007057|D043202|D012873"
"D016115"	"D000417"
"D016116"	"D000417"
"D016117"	"D000417"
"D016135"	"D009436"
"D016142"	"D019465|D025063|D000015|D061085"
"D016171"	"D017180"
"D016180"	"D012192"
"D016182"	"D016180|D012897|D012757"
"D016262"	"D011051|D020966|D019636"
"D016263"	"D007674|D015658"
"D016269"	"D005512"
"D016277"	"D016276"
"D016279"	"D016275"
"D016393"	"D008228"
"D016399"	"D008228"
"D016403"	"D016393"
"D016410"	"D016399"
"D016411"	"D016399"
"D016459"	"D007239|D011183"
"D016460"	"D017441|D006099"
"D016464"	"D008661"
"D016470"	"D001424|D018805"
"D016471"	"D010049"
"D016472"	"D019636|D009468"
"D016481"	"D016905"
"D016491"	"D014652"
"D016510"	"D009389|D003316"
"D016511"	"D049914|D000081207|D007232"
"D016518"	"D009464|D017253"
"D016532"	"D038901|D009083"
"D016537"	"D005733"
"D016538"	"D009083"
"D016543"	"D009423"
"D016553"	"D001327|D006474|D011696"
"D016569"	"D005124|D005141"
"D016574"	"D003866"
"D016575"	"D013543"
"D016583"	"D007938|D006800|D002418"
"D016584"	"D001008"
"D016585"	"D014627|D001424"
"D016586"	"D009379"
"D016603"	"D004802|D009135"
"D016640"	"D003920|D011248"
"D016643"	"D002418|D017096"
"D016649"	"D010049"
"D016657"	"D000686|D002539"
"D016672"	"D004936"
"D016706"	"D001172"
"D016711"	"D010335"
"D016715"	"D017880|D001848|D006223|D000015"
"D016720"	"D009181"
"D016731"	"D010322|D017193|D004890"
"D016736"	"D001327"
"D016738"	"D030342|D006330|D000015|D002780"
"D016750"	"D020274|D013118|D009468"
"D016751"	"D006525|D012327"
"D016767"	"D000072661|D015529"
"D016773"	"D007896"
"D016774"	"D016773"
"D016778"	"D008288"
"D016779"	"D008288|D020808"
"D016780"	"D008288"
"D016781"	"D001922|D014123|D020808"
"D016863"	"D016908"
"D016864"	"D009386|D049914"
"D016873"	"D016905|D017282|D000711"
"D016878"	"D010265|D000015|D011115"
"D016881"	"D009181"
"D016883"	"D007662|D048909|D003920"
"D016889"	"D014594"
"D016890"	"D016881"
"D016905"	"D001424"
"D016908"	"D001424"
"D016918"	"D025242|D001170"
"D016919"	"D016921|D003453"
"D016920"	"D008581|D020806"
"D016921"	"D020314|D008581"
"D017029"	"D004828"
"D017036"	"D013226"
"D017043"	"D005141|D003560"
"D017044"	"D007690"
"D017074"	"D007153"
"D017085"	"D013789"
"D017086"	"D013789"
"D017092"	"D011164|D012873"
"D017093"	"D048550"
"D017094"	"D011164|D008107|D012873"
"D017096"	"D019636|D002494"
"D017098"	"D004406"
"D017109"	"D064420|D020258|D009069|D011595"
"D017118"	"D017094"
"D017119"	"D017094"
"D017121"	"D017094"
"D017129"	"D017191|D007411"
"D017180"	"D013610"
"D017189"	"D017188"
"D017191"	"D017190"
"D017192"	"D001424|D012874"
"D017196"	"D017190"
"D017202"	"D006331|D014652"
"D017204"	"D025063|D000015|D009069"
"D017206"	"D017190"
"D017213"	"D003731"
"D017219"	"D013272"
"D017237"	"D001928|D017240"
"D017240"	"D028361|D009135"
"D017241"	"D059345|D020739|D017237"
"D017243"	"D020191|D020739|D017237"
"D017246"	"D009886|D017240"
"D017253"	"D009386|D020271|D020752|D009455"
"D017282"	"D000079426"
"D017285"	"D009220"
"D017359"	"D046110"
"D017436"	"D058490|D030342|D007006"
"D017445"	"D012871"
"D017449"	"D003877|D006968"
"D017453"	"D003877"
"D017484"	"D017453|D010787"
"D017488"	"D016113"
"D017490"	"D016113"
"D017492"	"D007642"
"D017496"	"D010859"
"D017497"	"D017192|D013492|D016575"
"D017499"	"D007642|D012873"
"D017511"	"D017445|D012883|D011711"
"D017513"	"D017512"
"D017515"	"D010915"
"D017520"	"D003240"
"D017544"	"D001014"
"D017545"	"D001014"
"D017562"	"D011183|D001660"
"D017563"	"D008171"
"D017565"	"D012507|D017563"
"D017573"	"D009059"
"D017588"	"D058489|D047808"
"D017590"	"D001928|D003711"
"D017593"	"D006970"
"D017599"	"D009373|D009380"
"D017624"	"D058490|D009396|D008607|D025063|D015783"
"D017674"	"D010760"
"D017681"	"D004802"
"D017689"	"D017880"
"D017696"	"D020914"
"D017700"	"D004620"
"D017703"	"D000038|D010612"
"D017719"	"D003925|D016523|D003929"
"D017726"	"D015828|D012173|D003586"
"D017728"	"D016399"
"D017731"	"D016410"
"D017825"	"D020279|D020271"
"D017827"	"D020754"
"D017889"	"D007499"
"D018088"	"D014376"
"D018159"	"D007759"
"D018178"	"D012327"
"D018182"	"D018178"
"D018184"	"D018701"
"D018185"	"D018184"
"D018191"	"D008202"
"D018192"	"D054973|D008203"
"D018193"	"D009370"
"D018194"	"D018193"
"D018195"	"D018193|D012509"
"D018196"	"D018193|D002277"
"D018197"	"D018193"
"D018198"	"D018193"
"D018202"	"D018193|D008175"
"D018203"	"D018193|D036821"
"D018206"	"D018205"
"D018207"	"D054973|D018205"
"D018208"	"D008080"
"D018211"	"D002813"
"D018212"	"D018213|D005870"
"D018214"	"D005350|D018213"
"D018217"	"D012516"
"D018218"	"D009372"
"D018219"	"D051642"
"D018221"	"D005350"
"D018223"	"D005354"
"D018224"	"D018218"
"D018225"	"D018218|D009375"
"D018226"	"D018225"
"D018227"	"D009372|D012509"
"D018228"	"D009372|D012509"
"D018229"	"D007889"
"D018231"	"D007889"
"D018232"	"D012208"
"D018233"	"D012208"
"D018234"	"D009379|D012509"
"D018235"	"D009379"
"D018236"	"D009373"
"D018237"	"D009373"
"D018239"	"D018237"
"D018245"	"D002822"
"D018246"	"D000306"
"D018248"	"D000236|D008113"
"D018251"	"D006607"
"D018253"	"D000236"
"D018262"	"D000230"
"D018263"	"D000230"
"D018266"	"D018294|D000230"
"D018267"	"D000230"
"D018268"	"D000230|D000306"
"D018270"	"D044584|D001943"
"D018273"	"D010190|D000230"
"D018277"	"D000230|D018297"
"D018278"	"D000230|D018358"
"D018279"	"D000230|D018297"
"D018280"	"D018294|D000230"
"D018281"	"D000230"
"D018282"	"D003536"
"D018283"	"D003536"
"D018285"	"D018281"
"D018286"	"D002277"
"D018287"	"D002277"
"D018288"	"D002277"
"D018289"	"D018307|D002277"
"D018291"	"D003537"
"D018292"	"D003537"
"D018296"	"D018295"
"D018297"	"D009375"
"D018300"	"D018299"
"D018301"	"D009375"
"D018302"	"D017599|D009375"
"D018303"	"D005910"
"D018306"	"D018302|D001932"
"D018307"	"D009375"
"D018308"	"D010212"
"D018315"	"D004806"
"D018316"	"D005910"
"D018317"	"D010524|D009380"
"D018318"	"D009455"
"D018321"	"D018317|D009232"
"D018324"	"D006391"
"D018325"	"D018324"
"D018326"	"D009370"
"D018328"	"D008545"
"D018329"	"D009508"
"D018330"	"D009506"
"D018331"	"D009508"
"D018332"	"D018331"
"D018335"	"D018193"
"D018344"	"D008231"
"D018347"	"D004266"
"D018352"	"D003333"
"D018353"	"D018701"
"D018354"	"D014036|D001102"
"D018357"	"D018186"
"D018358"	"D017599"
"D018370"	"D000081207"
"D018376"	"D000013|D002318"
"D018382"	"D006981"
"D018384"	"D013312|D008660"
"D018410"	"D011014|D001424"
"D018424"	"D004427|D002781"
"D018437"	"D010264"
"D018459"	"D017512"
"D018500"	"D003919"
"D018549"	"D054988|D001989"
"D018567"	"D001943"
"D018572"	"D016019|D016896"
"D018589"	"D013272|D010243"
"D018630"	"D012164"
"D018701"	"D012327"
"D018702"	"D018701"
"D018761"	"D009377"
"D018771"	"D010146|D007592"
"D018777"	"D018876"
"D018778"	"D002044"
"D018783"	"D007172"
"D018784"	"D000038"
"D018798"	"D019189|D000747"
"D018804"	"D018778|D012131"
"D018805"	"D007239|D018746"
"D018813"	"D009377"
"D018814"	"D009377"
"D018856"	"D003556"
"D018860"	"D017445|D002561"
"D018877"	"D018876"
"D018887"	"D000073376"
"D018888"	"D003704|D001037"
"D018901"	"D008661"
"D018902"	"D002806|D018901"
"D018908"	"D020879|D009135|D010335"
"D018917"	"D014652|D009901"
"D018921"	"D007960"
"D018923"	"D009784"
"D018979"	"D009220"
"D018980"	"D021921|D008607|D025063"
"D018981"	"D002239"
"D019042"	"D012983|D009135"
"D019043"	"D012983|D014652"
"D019046"	"D019337|D001855"
"D019048"	"D002278"
"D019052"	"D011644|D003866"
"D019053"	"D007410|D015658"
"D019080"	"D012877|D010859"
"D019082"	"D050171|D043202|D000015|D008052"
"D019121"	"D016905"
"D019142"	"D006482|D018702"
"D019150"	"D001927"
"D019189"	"D008659"
"D019247"	"D019282|D015658"
"D019263"	"D003866"
"D019280"	"D025063|D000015"
"D019283"	"D010195"
"D019292"	"D012888"
"D019294"	"D014973|D008052"
"D019337"	"D006402|D009371"
"D019339"	"D012868"
"D019349"	"D006566"
"D019351"	"D018184"
"D019449"	"D007079"
"D019512"	"D010195|D020751"
"D019522"	"D014623"
"D019534"	"D000070599|D007592"
"D019547"	"D010146"
"D019559"	"D014652"
"D019571"	"D009202|D006330"
"D019572"	"D005134|D012164"
"D019574"	"D003390|D009901"
"D019578"	"D000080874|D001480|D009069|D054969"
"D019585"	"D001927"
"D019586"	"D001927"
"D019588"	"D012816"
"D019636"	"D009422"
"D019693"	"D001327|D006521"
"D019694"	"D006521|D006509"
"D019698"	"D006521|D006526"
"D019773"	"D012164"
"D019781"	"D003941"
"D019846"	"D015835|D020275|D002526"
"D019851"	"D006402"
"D019867"	"D001327|D005921|D017563"
"D019871"	"D012868|D040181|D000080984|D012873"
"D019873"	"D008998"
"D019896"	"D008107|D030342|D008171|D013352"
"D019954"	"D009461|D001520"
"D019955"	"D019958"
"D019956"	"D065886"
"D019958"	"D065886"
"D019964"	"D001523"
"D019965"	"D001523"
"D019966"	"D064419|D001523"
"D019973"	"D019966"
"D020022"	"D005838|D004198"
"D020031"	"D014412|D006566"
"D020065"	"D008107|D008171"
"D020069"	"D018771"
"D020083"	"D010009"
"D020096"	"D009181"
"D020139"	"D009139|D046449"
"D020141"	"D006474|D014652"
"D020143"	"D005733"
"D020144"	"D001480|D002561"
"D020147"	"D001778"
"D020149"	"D000075322|D020260"
"D020151"	"D025861|D001796|D019851"
"D020152"	"D025861|D001796|D019851"
"D020158"	"D020739|D000592"
"D020159"	"D056806"
"D020162"	"D056806"
"D020163"	"D040181|D056806"
"D020165"	"D056806|D028361"
"D020167"	"D020739|D000592"
"D020176"	"D020739|D000592"
"D020181"	"D012891"
"D020187"	"D020923"
"D020190"	"D004831"
"D020191"	"D004831"
"D020192"	"D020191|D020271"
"D020194"	"D020191|D020271"
"D020195"	"D004827"
"D020196"	"D009422|D014947"
"D020210"	"D013119"
"D020211"	"D013119|D001342"
"D020214"	"D020196|D002561"
"D020230"	"D064420"
"D020232"	"D003704"
"D020233"	"D009461"
"D020235"	"D001072|D020233"
"D020240"	"D001072"
"D020241"	"D004683"
"D020242"	"D004683"
"D020243"	"D002544|D002539"
"D020244"	"D002544|D002539"
"D020246"	"D013927"
"D020250"	"D009325|D011183|D014839"
"D020252"	"D013272|D016888"
"D020255"	"D005128"
"D020258"	"D009422|D011041"
"D020260"	"D020258"
"D020269"	"D020268|D011115"
"D020271"	"D030342|D019636"
"D020274"	"D001327|D009422"
"D020275"	"D011129|D010523"
"D020277"	"D011129"
"D020278"	"D020274|D003711|D056784"
"D020288"	"D016545"
"D020293"	"D014657|D020274|D002561"
"D020294"	"D030342|D020511"
"D020295"	"D015192"
"D020300"	"D002561|D006470"
"D020301"	"D002561"
"D020325"	"D008881"
"D020326"	"D008881"
"D020329"	"D009069"
"D020330"	"D009059|D005155|D006566"
"D020331"	"D005155|D000015|D007232"
"D020333"	"D015835"
"D020335"	"D010291"
"D020336"	"D020335"
"D020338"	"D000160"
"D020339"	"D019574|D005910"
"D020343"	"D019586"
"D020345"	"D004760"
"D020364"	"D020361|D011115"
"D020370"	"D010003"
"D020371"	"D020279|D040181"
"D020388"	"D040181|D009136"
"D020389"	"D040181|D009136"
"D020417"	"D009759|D007232"
"D020422"	"D010523"
"D020424"	"D020422"
"D020425"	"D020422"
"D020426"	"D020422"
"D020428"	"D020422"
"D020429"	"D020422"
"D020430"	"D020424|D017769"
"D020431"	"D003389"
"D020433"	"D005156"
"D020511"	"D009468"
"D020512"	"D020914"
"D020513"	"D010245"
"D020514"	"D010245"
"D020516"	"D010523"
"D020520"	"D007238|D020521|D002545"
"D020521"	"D002561"
"D020522"	"D008228"
"D020526"	"D020520"
"D020528"	"D009103"
"D020529"	"D009103"
"D020642"	"D018901"
"D020734"	"D001480|D009069"
"D020751"	"D019973"
"D020752"	"D009422|D004476"
"D020759"	"D020760"
"D020760"	"D020758"
"D020762"	"D002544|D002539"
"D020765"	"D002561"
"D020766"	"D002542"
"D020767"	"D002542"
"D020773"	"D001927"
"D020774"	"D057180"
"D020786"	"D020785|D006392"
"D020788"	"D000072661|D007027|D012174"
"D020790"	"D003919"
"D020802"	"D000038|D013118|D020819|D002494"
"D020803"	"D018792|D006566"
"D020805"	"D014777|D002494"
"D020814"	"D016920|D004927"
"D020817"	"D000067877"
"D020818"	"D012552|D020809"
"D020820"	"D009461|D009069"
"D020821"	"D009069"
"D020828"	"D010243"
"D020863"	"D009421|D016543"
"D020896"	"D010335"
"D020914"	"D009135"
"D020918"	"D010523|D001342"
"D020925"	"D002534|D002545"
"D020936"	"D004827|D007232"
"D020938"	"D004828"
"D020941"	"D009157"
"D020945"	"D008180|D020293|D008590"
"D020967"	"D009135"
"D020968"	"D009443|D020516"
"D021181"	"D005512"
"D021182"	"D005512"
"D021183"	"D000074924"
"D021184"	"D000074924"
"D021441"	"D010190|D044584"
"D021782"	"D052177|D014564"
"D021865"	"D003048"
"D021866"	"D003048"
"D021921"	"D001024"
"D022124"	"D010335"
"D022861"	"D025861|D010981|D016115"
"D023521"	"D002694"
"D023903"	"D023921"
"D023921"	"D003327"
"D023961"	"D058489|D006059"
"D023981"	"D007951|D012509"
"D024741"	"D002312|D030342"
"D024801"	"D019636"
"D024821"	"D008659|D007333"
"D025861"	"D030342|D001778"
"D025962"	"D009421"
"D027601"	"D004266"
"D028226"	"D000686|D008661"
"D028227"	"D020271|D017772|D028226"
"D028243"	"D059345|D016657|D028226|D020739"
"D028361"	"D008659"
"D028921"	"D009100"
"D028922"	"D009100"
"D029021"	"D000820|D018185"
"D029241"	"D015418|D028361"
"D029242"	"D015418|D028361"
"D029424"	"D008173"
"D029502"	"D030342|D000741|D000080984"
"D029503"	"D029502|D012010"
"D029593"	"D008133"
"D029597"	"D008133"
"D030321"	"D058490|D009396"
"D030341"	"D012327"
"D030342"	"D009358"
"D030401"	"D028361|D008661"
"D030981"	"D010014|D001848"
"D031249"	"D015616"
"D031300"	"D014657|D012164"
"D031845"	"D030342|D009139|D030981"
"D031901"	"D014328"
"D031941"	"D018353|D014766|D005393"
"D031954"	"D002822"
"D033461"	"D010335"
"D034062"	"D007319|D017096"
"D034141"	"D007019"
"D034321"	"D010335"
"D034381"	"D006311"
"D034701"	"D008415"
"D034721"	"D008415"
"D036821"	"D009372|D016889|D012509"
"D036981"	"D005208|D005534"
"D037801"	"D005530"
"D038223"	"D001924"
"D038261"	"D020279|D020271"
"D038642"	"D001930"
"D038921"	"D038901"
"D039141"	"D009136"
"D039941"	"D016908"
"D040181"	"D030342"
"D041441"	"D012162"
"D041761"	"D005705|D002769"
"D041781"	"D007565"
"D041881"	"D002764"
"D042101"	"D002764"
"D042882"	"D002769|D002137|D041761"
"D042883"	"D002769|D003137"
"D043183"	"D003109"
"D043202"	"D008661"
"D043204"	"D043202"
"D043963"	"D003108"
"D044343"	"D009748"
"D044483"	"D007410"
"D044504"	"D004760"
"D044542"	"D019465|D006330|D011666|D000015|D007911"
"D044882"	"D008659"
"D044903"	"D007003|D010182|D006946|D007232"
"D044905"	"D044904"
"D045169"	"D012141|D018352"
"D045463"	"D018184"
"D045464"	"D018184"
"D045743"	"D012595"
"D045745"	"D012595"
"D045822"	"D007415|D014102"
"D045823"	"D007415"
"D045828"	"D016905"
"D045908"	"D012376|D011213|D018419"
"D046110"	"D006973|D011248"
"D046150"	"D004392"
"D046151"	"D050033"
"D046152"	"D009372|D005770"
"D046248"	"D011707"
"D046290"	"D008100"
"D046349"	"D017094"
"D046350"	"D017094"
"D046351"	"D017094"
"D046589"	"D059345|D002544|D030342|D002539|D015140"
"D046649"	"D006408"
"D046728"	"D003092"
"D046729"	"D046728"
"D046730"	"D046728"
"D046788"	"D007592"
"D046789"	"D002357"
"D047688"	"D001941|D003560"
"D047708"	"D009372"
"D047728"	"D009216"
"D047748"	"D006964"
"D047808"	"D012734"
"D047868"	"D008175"
"D049288"	"D009136"
"D049290"	"D020143"
"D049292"	"D010335"
"D049309"	"D018307|D012878"
"D049328"	"D009508"
"D049914"	"D008659"
"D049932"	"D049914"
"D049970"	"D015785|D006111|D030342"
"D050030"	"D008133"
"D050031"	"D013967"
"D050090"	"D012734"
"D050171"	"D052439"
"D050197"	"D001161"
"D050218"	"D001823|D001837"
"D050336"	"D004392"
"D050379"	"D001161"
"D050398"	"D001859"
"D050500"	"D010195"
"D050723"	"D014947"
"D051270"	"D020773"
"D051302"	"D051303"
"D051303"	"D051270"
"D051346"	"D012816"
"D051437"	"D007674"
"D051642"	"D018218"
"D051677"	"D051642|D012509"
"D052016"	"D009059|D005759"
"D052018"	"D001068"
"D052120"	"D009202|D040181|D038901|D006008"
"D052159"	"D058490|D030342|D007676"
"D052177"	"D007674"
"D052245"	"D006319|D012174|D054062"
"D052256"	"D013708|D009135"
"D052456"	"D007009"
"D052496"	"D008060"
"D052517"	"D052516"
"D052536"	"D009542"
"D052537"	"D009542"
"D052556"	"D009542"
"D052879"	"D009410|D003711|D013118|D019636|D014806"
"D052880"	"D013492|D009220"
"D052919"	"D020739|D018901"
"D053039"	"D052878|D014515"
"D053040"	"D052878|D007674"
"D053098"	"D063730|D007015"
"D053099"	"D010335|D014511"
"D053201"	"D001745|D059411"
"D053202"	"D014549"
"D053206"	"D004775"
"D053306"	"D030342|D004406|D000081207"
"D053358"	"D040181|D004476"
"D053360"	"D004476"
"D053421"	"D009784|D014652|D010523"
"D053447"	"D010335"
"D053529"	"D012873"
"D053546"	"D015776"
"D053549"	"D004476|D009260"
"D053559"	"D003317"
"D053560"	"D007057|D012873"
"D053578"	"D015835|D020361|D009207"
"D053579"	"D015499"
"D053684"	"D053682"
"D053713"	"D007248"
"D053716"	"D000080822"
"D053717"	"D000077299"
"D053840"	"D000075224|D030342|D001145"
"D054000"	"D020752|D000015|D009506"
"D054058"	"D017202"
"D054060"	"D007238|D011655"
"D054067"	"D011686"
"D054078"	"D056660|D020739|D006942|D018901"
"D054081"	"D054220"
"D054082"	"D054081"
"D054091"	"D054081"
"D054143"	"D006333"
"D054144"	"D006333"
"D054179"	"D000799|D000081208"
"D054219"	"D009370"
"D054220"	"D009421"
"D054221"	"D038901|D054081|D054082"
"D054312"	"D012883|D009165"
"D054319"	"D001928|D003711"
"D054331"	"D007248"
"D054364"	"D018218"
"D054403"	"D015463|D015448"
"D054429"	"D007951|D054437"
"D054437"	"D001855"
"D054463"	"D012868|D000015|D012873"
"D054506"	"D017486"
"D054514"	"D005124"
"D054517"	"D002481|D009916"
"D054537"	"D006327"
"D054549"	"D018487"
"D054556"	"D013923"
"D054559"	"D010760"
"D054685"	"D016393"
"D054739"	"D015620"
"D054740"	"D015620"
"D054752"	"D015620"
"D054853"	"D017445|D014657|D001157"
"D054868"	"D013921|D025063"
"D054877"	"D025063|D000015"
"D054880"	"D016464"
"D054973"	"D018204"
"D054975"	"D017689|D000015|D006222|D007029"
"D054988"	"D054990|D017563"
"D054989"	"D012871|D005355"
"D054990"	"D011658"
"D055008"	"D011009"
"D055034"	"D001847"
"D055036"	"D009139"
"D055092"	"D009139|D002357|D007818"
"D055107"	"D012880"
"D055113"	"D010518"
"D055118"	"D010349"
"D055371"	"D055370"
"D055496"	"D003109"
"D055501"	"D008232"
"D055577"	"D013106"
"D055623"	"D007642|D011230"
"D055652"	"D025861|D001791"
"D055653"	"D012626|D055847|D012873"
"D055665"	"D011693"
"D055673"	"D061085"
"D055728"	"D009196"
"D055732"	"D008172|D001228"
"D055752"	"D002283"
"D055882"	"D009506"
"D055947"	"D019465|D001014|D000784|D030342|D000015"
"D055948"	"D009133"
"D055953"	"D056648|D059345"
"D055955"	"D015356|D009461|D004427|D002561|D014786|D005132"
"D055959"	"D013122"
"D055963"	"D001249|D006969|D004342"
"D055964"	"D001072"
"D055986"	"D010808"
"D056005"	"D007918"
"D056104"	"D000071956|D001145"
"D056128"	"D009765"
"D056266"	"D007642|D004890|D012873"
"D056305"	"D001847"
"D056486"	"D008107|D064420|D011041"
"D056586"	"D000755|D008171|D012120"
"D056587"	"D056660"
"D056627"	"D010532|D005355"
"D056647"	"D014657"
"D056648"	"D001327|D056647"
"D056660"	"D030342|D012873"
"D056684"	"D030342|D010859|D009260|D009264"
"D056685"	"D019465|D030342|D000015"
"D056693"	"D000592"
"D056725"	"D014842"
"D056728"	"D014842"
"D056729"	"D014842"
"D056730"	"D019465|D025063|D000015|D004392"
"D056731"	"D019465|D030342|D003920|D000015"
"D056732"	"D012868|D000015|D000592|D012873"
"D056733"	"D012868|D000015|D009232|D006338"
"D056734"	"D006201|D000015|D012873"
"D056735"	"D001327|D030342|D008232"
"D056768"	"D015417|D010523"
"D056769"	"D000072661|D015417|D012174"
"D056770"	"D016113|D000015|D012873"
"D056806"	"D020739|D000592"
"D056807"	"D056806"
"D056828"	"D054179"
"D056830"	"D040181|D006330|D000015|D004695"
"D056846"	"D015785|D000015|D004392|D003240"
"D056887"	"D011391"
"D056889"	"D040181|D006330|D000015|D008052"
"D056929"	"D015499"
"D056988"	"D009203"
"D056989"	"D009203"
"D057045"	"D005764|D007818"
"D057049"	"D013921"
"D057066"	"D005901|D009901"
"D057068"	"D050723"
"D057090"	"D000230"
"D057129"	"D007499|D003316"
"D057130"	"D015785|D012164"
"D057135"	"D008268"
"D057165"	"D008659"
"D057178"	"D057174|D018888"
"D057180"	"D057174"
"D057765"	"D006969|D004802|D004941"
"D057767"	"D010009"
"D057770"	"D012873"
"D057774"	"D054971|D007022"
"D057826"	"D015785|D008268"
"D057873"	"D010510"
"D057885"	"D011123"
"D057891"	"D011123"
"D057973"	"D015499|D040181"
"D058065"	"D009202|D048909"
"D058068"	"D010641"
"D058088"	"D009202|D049288|D012120"
"D058165"	"D019465|D007011|D025063|D006330|D000015|D044148"
"D058186"	"D051437"
"D058225"	"D020763"
"D058247"	"D000505"
"D058249"	"D009386"
"D058252"	"D014973|D017441|D006099"
"D058256"	"D009424|D004569|D055724"
"D058285"	"D058267"
"D058387"	"D058365|D016469"
"D058405"	"D012509"
"D058429"	"D017205"
"D058437"	"D006973|D012164"
"D058456"	"D013684|D012164"
"D058489"	"D012734"
"D058490"	"D012734"
"D058494"	"D015785|D054222|D009136"
"D058495"	"D025063|D000015"
"D058496"	"D021081|D025063|D000015"
"D058497"	"D005124|D014564|D013576|D000015"
"D058499"	"D012162"
"D058502"	"D000015|D009436"
"D058527"	"D016399"
"D058531"	"D058489"
"D058540"	"D015785|D040181|D000013|D061085"
"D058617"	"D018193|D008223"
"D058631"	"D016464|D010009|D030342"
"D058670"	"D058674|D000782"
"D058729"	"D016491|D050197"
"D058747"	"D030342|D003103|D000015"
"D058922"	"D001943"
"D058923"	"D007869|D009135"
"D058968"	"D000820|D010273"
"D059228"	"D007674"
"D059268"	"D014627"
"D059269"	"D003108"
"D059327"	"D017880"
"D059350"	"D010146"
"D059407"	"D003229"
"D060368"	"D003881"
"D060585"	"D060605"
"D060825"	"D003072"
"D060831"	"D003875"
"D060905"	"D060750"
"D061085"	"D009421|D020763"
"D061205"	"D002114"
"D061212"	"D008568"
"D061270"	"D014947|D009668"
"D061325"	"D010051|D009386|D001943"
"D061686"	"D012735|D020018"
"D062027"	"D001327|D012872"
"D062788"	"D014591"
"D063173"	"D007569|D008336"
"D063371"	"D004427"
"D063730"	"D012279|D017674"
"D063806"	"D059352|D009135"
"D063847"	"D010979|D048429"
"D063926"	"D003875"
"D064726"	"D001943"
"D065134"	"D003240"
"D065311"	"D065308|D002278|D000230"
"D065626"	"D005234"
"D065646"	"D002277"
"D065705"	"D058627"
"D065706"	"D065704"
"D065708"	"D065704|D008831"
"D065766"	"D006463"
"D065851"	"D055703|D005298"
"D066087"	"D011248|D003643"
"D011832"	"D014947|D011830|D000069079"
"D000022"	"D011256|D011248"
"D007744"	"D011248"
"D013492"	"D007239|D007249"
"D008548"	"D017495"
"D002652"	"D001519"
"D011183"	"D010335"
"D005532"	"D038061|D005530"
"D005531"	"D005530"
"D007232"	"D009358"
"D018177"	"D018178"
"D004938"	"D004935|D006258|D005770"
"D000138"	"D000137"
"D017486"	"D012871"
"D012897"	"D014777"
"D012868"	"D000013|D012871"
"D020262"	"D020260|D008630"
"D001849"	"D004700|D001847"
"D016871"	"D016905"
"D020969"	"D010335"
"D004266"	"D014777"
"D015845"	"D011681"
"D000291"	"D005831"
"D034161"	"D007239"
"D020279"	"D020271|D020739|D003711|D056784"
"D038901"	"D040181|D020271|D008607"
"D020739"	"D001928|D008661"
"D015785"	"D030342|D005128"
"D020268"	"D020258|D020751"
"D020763"	"D013568"
"D012120"	"D012140"
"D012130"	"D012140|D006969"
"D008599"	"D010335"
"D057177"	"D057165|D019636"
"D006969"	"D006967"
"D006725"	"D017206"
"D000080983"	"D001855"
"D000749"	"D000748"
"D000787"	"D002637|D017202"
"D059345"	"D002561"
"D006099"	"D010335|D008232"
"D004802"	"D007960"
"D001068"	"D001523"
"D012678"	"D009461"
"D010808"	"D019937"
"D001699"	"D015991|D013223"
"D014555"	"D014570"
"D004644"	"D001520"
"D065886"	"D001523"
"D001024"	"D006349|D014694"
"D016127"	"D006349"
"D012818"	"D012816"
"D059413"	"D007239"
"D011596"	"D019954"
"D000079426"	"D007239"
"D003318"	"D003316"
"D012327"	"D014777"
"D010335"	"D013568"
"D001157"	"D014652"
"D054079"	"D018376"
"D004195"	"D000820|D023421|D008954"
"D009139"	"D000013|D009140"
"D020754"	"D002524|D013132"
"D000081207"	"D030342|D007153"
"D011529"	"D010273|D011528"
"D001423"	"D007239"
"D025063"	"D000013|D030342"
"D000015"	"D000013"
"D001519"	"D001520"
"D014606"	"D015864"
"D013832"	"D014804"
"D001661"	"D001660|D004067"
"D004065"	"D000013|D004066"
"D000068105"	"D001523"
"D014545"	"D052878|D002137"
"D014524"	"D014522"
"D009461"	"D009422|D012816"
"D002471"	"D063646"
"D015464"	"D007951|D009196"
"D006403"	"D019411"
"D018056"	"D006439|D001790|D012212"
"D012816"	"D013568"
"D001824"	"D010808|D010829"
"D009371"	"D009369"
"D016723"	"D012038|D009142"
"D012757"	"D000820"
"D005517"	"D011041"
"D009989"	"D009983"
"D006259"	"D020196"
"D055397"	"D055370"
"D007235"	"D007232"
"D006963"	"D012817"
"D004614"	"D015431"
"D005667"	"D013207|D005393"
"D008303"	"D002276"
"D018295"	"D009375"
"D009374"	"D009369|D004195"
"D000071960"	"D002278|D001943"
"D018299"	"D009375"
"D006332"	"D006331|D006984"
"D002542"	"D013923|D002561"
"D020423"	"D020422"
"D012090"	"D013180"
"D001259"	"D020820"
"D013132"	"D020271|D002526|D013118"
"D000783"	"D014652"
"D020785"	"D054079|D009421"
"D001925"	"D001927"
"D019767"	"D019465|D018640"
"D007571"	"D009140|D009057"
"D000073618"	"D006566"
"D000070657"	"D007592"
"D009154"	"D014644"
"D014945"	"D012038"
"D006097"	"D003238"
"D005355"	"D010335"
"D000072661"	"D030342|D000015"
"D010507"	"D013995|D002909"
"D007569"	"D019767|D007571"
"D019465"	"D009139"
"D014201"	"D006373"
"D014474"	"D003244"
"D003229"	"D005128"
"D015818"	"D001424|D015817"
"D012817"	"D012816"
"D012774"	"D012769|D014947"
"D000071576"	"D014947"
"D044342"	"D009748"
"D010608"	"D010038|D009057"
"D003221"	"D019954"
"D017001"	"D014076"
"D017443"	"D012871"
"D048909"	"D003920"
"D019937"	"D003933"
"D003354"	"D000193"
"D006374"	"D006373|D010273"
"D000076385"	"D005759"
"D004240"	"D020763|D000076385"
"D014188"	"D006330"
"D017205"	"D017190"
"D064420"	"D064419"
"D015835"	"D003389|D005128|D002493"
"D001848"	"D001847"
"D001184"	"D013064"
"D054969"	"D001342"
"D004756"	"D016905"
"D017699"	"D010146"
"D020018"	"D001523"
"D010039"	"D010038|D006258"
"D004427"	"D010038"
"D012877"	"D012816"
"D006470"	"D010335"
"D011213"	"D004266"
"D007906"	"D007905"
"D012376"	"D000820"
"D004487"	"D012816"
"D003095"	"D003240"
"D004617"	"D016769"
"D011249"	"D002318|D011248"
"D016724"	"D012141|D010995|D004653"
"D004671"	"D018792|D001102|D012327"
"D020721"	"D004195|D020274"
"D004683"	"D018792|D018354|D004671|D004679"
"D053821"	"D007239|D002318"
"D019960"	"D001523"
"D059525"	"D012141|D007818"
"D000073376"	"D004827"
"D006734"	"D000820"
"D004890"	"D012877|D012871"
"D003875"	"D003872|D004342"
"D005315"	"D011248|D009358"
"D001790"	"D002943"
"D017193"	"D014777|D012874"
"D016552"	"D008919"
"D012129"	"D003948"
"D011574"	"D011582"
"D010553"	"D010551"
"D005131"	"D005151|D005128"
"D010858"	"D001686|D010808"
"D008109"	"D008107|D010272"
"D025064"	"D025063"
"D058533"	"D012734|D025064"
"D015318"	"D002239"
"D020140"	"D016464|D020739"
"D007775"	"D011644|D001941"
"D012309"	"D001519"
"D007174"	"D001523"
"D004067"	"D004066|D009371"
"D052776"	"D005261"
"D055703"	"D012101"
"D047109"	"D005314"
"D006472"	"D009059|D009912|D006470"
"D005674"	"D045825"
"D016870"	"D016905"
"D018312"	"D018309"
"D005094"	"D009916"
"D009378"	"D009369"
"D020157"	"D008661"
"D065631"	"D012220|D012130"
"D020198"	"D006259|D020300"
"D006406"	"D006470"
"D019190"	"D019189"
"D006491"	"D010995|D006470"
"D014813"	"D006474|D001361|D001778"
"D007228"	"D009748"
"D001928"	"D008659|D001927"
"D008113"	"D008107|D004067"
"D046449"	"D006547"
"D004457"	"D004769"
"D025981"	"D014947"
"D005264"	"D050723|D007869"
"D000798"	"D014652"
"D014770"	"D012816"
"D001134"	"D014947"
"D003072"	"D019965"
"D014883"	"D008659"
"D048968"	"D014839|D011248"
"D008052"	"D008661|D052439"
"D006951"	"D006949"
"D007077"	"D007410"
"D013207"	"D017192|D013203"
"D007231"	"D007223"
"D020919"	"D020920"
"D010551"	"D001520"
"D016154"	"D004066|D005402"
"D006932"	"D010335"
"D051556"	"D006932|D007232"
"D012888"	"D001859"
"D007579"	"D007410"
"D015619"	"D000013|D012140"
"D003914"	"D012857|D006330"
"D016849"	"D015828|D006561|D007634"
"D051436"	"D051437"
"D000067011"	"D044342"
"D015323"	"D002239"
"D056986"	"D011528"
"D009165"	"D009164"
"D009370"	"D009369"
"D007964"	"D007960|D010335"
"D052516"	"D013106"
"D018792"	"D000069544|D020805"
"D056784"	"D001927"
"D009062"	"D009059|D006258"
"D018310"	"D010051|D013736|D018312"
"D017512"	"D017444"
"D012875"	"D008659|D012871"
"D052439"	"D008659"
"D006685"	"D012818|D014832|D012120"
"D018205"	"D018204"
"D011506"	"D000602"
"D002784"	"D002782|D013261"
"D000375"	"D048788"
"D011226"	"D000075224|D001145"
"D014382"	"D014376|D017192"
"D018190"	"D009370"
"D007160"	"D007154"
"D007431"	"D010335"
"D044904"	"D016464|D002239"
"D008992"	"D018419"
"D008439"	"D007571"
"D005540"	"D012123"
"D007082"	"D041741|D007421"
"D055370"	"D008171|D013898"
"D013899"	"D009371"
"D018242"	"D018302"
"D008577"	"D016543"
"D009380"	"D009370"
"D008593"	"D002979"
"D014592"	"D014591|D006470"
"D001261"	"D008171"
"D006942"	"D001796|D007160|D012816"
"D000782"	"D011003|D002869"
"D000072039"	"D004204|D050723"
"D018640"	"D000013|D009057"
"D020879"	"D009461"
"D001284"	"D020763"
"D020966"	"D009135"
"D020361"	"D009423|D019636|D010257"
"D007238"	"D009336|D007511"
"D006970"	"D020919"
"D000079524"	"D019966"
"D017441"	"D003095|D012871"
"D009385"	"D009369|D010335"
"D018204"	"D009370"
"D018241"	"D018242"
"D009442"	"D009463|D018358"
"D009188"	"D020361|D020278|D009187"
"D011581"	"D004191"
"D009508"	"D009506"
"D009765"	"D044343|D050177"
"D007570"	"D001845|D007571"
"D010007"	"D001847|D002357"
"D018213"	"D009372"
"D001850"	"D007239|D001847"
"D009336"	"D010335"
"D003560"	"D009369|D020763"
"D012677"	"D011603|D009424"
"D017444"	"D012871"
"D000080874"	"D057165|D019636"
"D010483"	"D007571|D010510"
"D014381"	"D014376|D053821"
"D000008"	"D009371"
"D007911"	"D008548"
"D007040"	"D012818|D012131"
"D010915"	"D017444"
"D009175"	"D009180"
"D011003"	"D055614"
"D018256"	"D000236"
"D020924"	"D012816"
"D011488"	"D003677"
"D009424"	"D055687"
"D009142"	"D055687"
"D011618"	"D019967"
"D011251"	"D007239|D011248"
"D005543"	"D001134"
"D020447"	"D012893"
"D009217"	"D009379|D012509"
"D014808"	"D001361"
"D006524"	"D014777|D006520"
"D018355"	"D014036"
"D014552"	"D007239|D014570"
"D013121"	"D013122"
"D007249"	"D010335"
"D017678"	"D003710"
"D010253"	"D018184"
"D048090"	"D012141|D002418"
"D012769"	"D010335"
"D001146"	"D001145"
"D014987"	"D012466"
"D001307"	"D010465"
"D019567"	"D014947"
"D025242"	"D025241"
"D000844"	"D007592"
"D055009"	"D013122"
"D014811"	"D001361"
"D040921"	"D000068099"
"D020819"	"D002494"
"D010538"	"D010532|D059413"
"D066088"	"D003643"
"D003645"	"D003643"
"D013405"	"D012940|D016728"
"D012879"	"D055827"
"D001833"	"D006706|D000222|D001831"
"D017880"	"D009139"
"D000070779"	"D013585|D052256|D005870"
"D009494"	"D020806|D013587"
"D001015"	"D001018"
"D017271"	"D008336|D009135"
"D000070639"	"D052256"
"D001835"	"D049628|D012816"
"D016769"	"D014652"
"D007869"	"D014947"
"D013986"	"D064927"
"D014006"	"D014005|D012536"
"D014005"	"D003881"
"D005533"	"D005534"
"D020808"	"D011528|D020807"
"D016156"	"D012140|D005402"
"D004937"	"D016154|D004935"
"D058674"	"D016296|D002869"
"D011252"	"D009369|D011248"
"D020306"	"D014376|D020806"
"D065703"	"D054220"
"D059411"	"D020924"
"D014412"	"D014777"
"D030361"	"D014412|D004266"
"D054062"	"D000015|D001766|D003638"
"D012729"	"D002869"
"D059786"	"D059785|D002869"
"D009384"	"D004701|D010257"
"D002537"	"D001161|D020765"
"D010911"	"D004701|D010900|D007029"
"D015217"	"D016464|D008064"
"D007766"	"D005128"
"D005763"	"D013505|D000714"
"D050110"	"D049088|D013514"
"D001836"	"D001835"
"D056006"	"D007918"
"D015448"	"D007945"
"D020792"	"D012466|D002137"
"D000402"	"D012131"
"D016276"	"D002320"
"D016275"	"D002320"
"D009389"	"D008679"
"D005733"	"D013106"
"D004936"	"D004240"
"D015529"	"D001649|D004065|D003560"
"D001922"	"D000038|D001927|D002494"
"D007662"	"D000138"
"D020806"	"D001424|D002494"
"D020314"	"D009181|D002494"
"D007690"	"D052177|D000072661|D000015"
"D048550"	"D008107"
"D011595"	"D011596|D020820"
"D017188"	"D009349"
"D017190"	"D009349"
"D006968"	"D006967"
"D016113"	"D007057|D012873"
"D001014"	"D001018|D000783"
"D004620"	"D004617"
"D016523"	"D007871|D005534"
"D000306"	"D000303|D000310"
"D006607"	"D018294|D000236"
"D018294"	"D009375"
"D044584"	"D000230|D018299"
"D003333"	"D030341"
"D018186"	"D018184"
"D013312"	"D010829"
"D001989"	"D001988"
"D016019"	"D013223"
"D016896"	"D011379|D017063"
"D009377"	"D004701|D009386|D009378"
"D018876"	"D006967|D007280"
"D018746"	"D007249|D012769"
"D001037"	"D013064"
"D012983"	"D009371"
"D019282"	"D009748|D008659"
"D014973"	"D052439"
"D000070599"	"D014947"
"D006521"	"D006505"
"D003941"	"D019937"
"D000080984"	"D000080983|D007232"
"D013352"	"D004646"
"D005838"	"D055614"
"D020923"	"D020447"
"D004831"	"D004829|D000073376"
"D014839"	"D012817"
"D016888"	"D014652"
"D016545"	"D002551"
"D017769"	"D020424|D012090|D009408"
"D005156"	"D005155"
"D020758"	"D014652|D013118"
"D020809"	"D020807"
"D000074924"	"D005512"
"D007333"	"D004351|D006946"
"D017772"	"D000686|D010523"
"D014766"	"D014777|D018805"
"D007019"	"D001796"
"D001924"	"D016489|D000070642"
"D002137"	"D020763"
"D014102"	"D020763"
"D018419"	"D000820"
"D050033"	"D000013|D013959"
"D008100"	"D008107|D018784"
"D001823"	"D001669|D008660|D001824"
"D013708"	"D014947"
"D009410"	"D010335"
"D052878"	"D014570"
"D007015"	"D015499|D017674|D008664"
"D015776"	"D007645"
"D009207"	"D020820"
"D053682"	"D052256"
"D000080822"	"D001068"
"D000077299"	"D011014|D003428"
"D000081208"	"D000081207"
"D018487"	"D018754"
"D013923"	"D016769"
"D012880"	"D000067029|D012879|D010858"
"D010349"	"D010342"
"D055847"	"D003123"
"D000784"	"D000783"
"D005132"	"D005128|D012816"
"D000071956"	"D003288|D006335"
"D006338"	"D006331|D013899"
"D011391"	"D020763"
"D057174"	"D003704|D057177"
"D054971"	"D009461|D054969"
"D010641"	"D055614"
"D044148"	"D000013|D008206"
"D004569"	"D003943|D004568"
"D055724"	"D010829"
"D058267"	"D004478"
"D058365"	"D000072742|D002177"
"D016469"	"D000072742|D018805"
"D054222"	"D054081|D054082"
"D021081"	"D009422"
"D010273"	"D000820|D010272"
"D060605"	"D003881"
"D060750"	"D014102|D017760"
"D008568"	"D007858"
"D008336"	"D007571"
"D059352"	"D010146|D012677|D009135"
"D010979"	"D006403"
"D048429"	"D002468"
"D065308"	"D013568"
"D058627"	"D019465|D065703"
"D065704"	"D054220"
"D008831"	"D019465|D065703"
"D005298"	"D055703"
"D003643"	"D010335"
"D011830"	"D011827|D011870"
"D000069079"	"D004781|D011827"
"D011256"	"D011379|D011247"
"D017495"	"D010859"
"D038061"	"D017880"
"D011681"	"D009461|D005128"
"D015991"	"D011634"
"D013223"	"D004812|D008433|D017531"
"D023421"	"D008919"
"D008954"	"D008962"
"D063646"	"D009385"
"D019411"	"D008919|D019937"
"D006439"	"D002320"
"D012212"	"D010825|D008919"
"D012038"	"D001686"
"D009983"	"D013523"
"D006984"	"D020763"
"D013180"	"D014947"
"D014644"	"D055614"
"D003238"	"D014024"
"D013995"	"D055585"
"D002909"	"D010829"
"D003244"	"D019965|D019954"
"D003948"	"D019937"
"D011582"	"D011579"
"D005151"	"D006259"
"D005314"	"D012098|D009024"
"D009912"	"D009059|D012816"
"D045825"	"D016905"
"D018309"	"D009370"
"D007223"	"D009273"
"D020920"	"D012893"
"D005402"	"D020763"
"D002782"	"D002776"
"D013261"	"D002776|D008563"
"D048788"	"D010829"
"D012123"	"D012129|D012143"
"D041741"	"D041981"
"D007421"	"D007422"
"D013898"	"D014947"
"D002979"	"D046468|D055703"
"D004204"	"D014947|D007592"
"D009463"	"D018317"
"D050177"	"D001835"
"D001845"	"D001847|D003560"
"D011603"	"D001525|D010827|D026441|D011579"
"D009180"	"D016905"
"D019967"	"D001523"
"D006520"	"D000820|D007239|D006505"
"D003710"	"D011154|D015991|D012942"
"D010465"	"D008606"
"D025241"	"D013166|D001168"
"D012940"	"D012961"
"D016728"	"D001526"
"D006706"	"D010829"
"D000222"	"D010829|D000220"
"D001831"	"D055986|D010829"
"D049628"	"D006128|D001837"
"D064927"	"D001733"
"D012536"	"D012871"
"D020807"	"D010272|D002494"
"D016296"	"D055614"
"D059785"	"D002875"
"D013505"	"D013514"
"D000714"	"D013514"
"D049088"	"D000073319"
"D002320"	"D002943"
"D008679"	"D010335"
"D007871"	"D012883"
"D011379"	"D003933"
"D017063"	"D010043|D035843"
"D004351"	"D000069437"
"D016489"	"D006259|D014949"
"D000070642"	"D001930"
"D001669"	"D055598"
"D003428"	"D007239|D007049"
"D018754"	"D006331"
"D000067029"	"D001824"
"D010342"	"D000074822"
"D003288"	"D014949"
"D006335"	"D013898"
"D003943"	"D019937"
"D004568"	"D019937"
"D000072742"	"D009181"
"D017760"	"D001847"
"D007858"	"D008606|D011588"
"D011827"	"D055585"
"D011870"	"D011634"
"D004781"	"D004787"
"D011247"	"D012098"
"D011634"	"D008511|D006262|D004778"
"D004812"	"D011634|D008919"
"D008433"	"D010811"
"D017531"	"D011787"
"D008962"	"D008919"
"D010825"	"D010811"
"D013523"	"D004864"
"D012098"	"D055703"
"D009024"	"D048788"
"D009273"	"D009272"
"D002776"	"D013256"
"D008563"	"D008055"
"D012143"	"D002943"
"D041981"	"D004064"
"D007422"	"D041981"
"D046468"	"D055703|D048788"
"D001525"	"D004191"
"D010827"	"D001690"
"D026441"	"D000529"
"D012942"	"|D001525"
"D008606"	"D011579"
"D012961"	"D012942"
"D000220"	"D001686"
"D006128"	"D048788"
"D001733"	"D014947|D011041"
"D002875"	"D040342|D022082|D042581"
"D000073319"	"D013812|D061217|D019468"
"D010043"	"D017531|D011787"
"D035843"	"D012106"
"D000069437"	"D002620"
"D014949"	"D014947"
"D000074822"	"D001294|D015438"
"D011588"	"D011584|D011585"
"D004787"	"D011634"
"D008511"	"D006281"
"D006262"	"D011154"
"D011787"	"D017530|D006298"
"D013256"	"D000072473"
"D001690"	"D010811"
"D000529"	"D013812"
"D040342"	"D055614"
"D022082"	"D002477"
"D042581"	"D022003"
"D061217"	"D006293"
"D019468"	"D010346"
"D012106"	"D012586"
"D002620"	"D010829"
"D001294"	"D001290|D003695"
"D015438"	"D001519"
"D011584"	"D001525"
"D011585"	"D011579"
"D006298"	"|D006281"
"D000072473"	"D011083"
"D022003"	"D002467"
"D006293"	"D006266"
"D010346"	"D006298"
"D012586"	"D010811"
"D001290"	"D001520"
"D003695"	"D017530|D010346"
"D002467"	"D015388|D042541"
"D006266"	"D011314|D004505"
"D015388"	"D022083"
"D042541"	"D001825|D022082"
"D011314"	"D006296"
"D004505"	"D004493"
"D022083"	"D003593"
"D001825"	"D014024|D001826"
"D006296"	"D005159"
"D003593"	"D042541"
"D001826"	"D005441"
